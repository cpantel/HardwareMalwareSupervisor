// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2018.2 (lin64) Build 2258646 Thu Jun 14 20:02:38 MDT 2018
// Date        : Mon Sep  7 12:44:26 2020
// Host        : a10 running 64-bit Linux Mint 18.3 Sylvia
// Command     : write_verilog -mode funcsim -nolib -force -file
//               /home/carlos/Documents/demos/VERSIONADO/speaker_modules/HardwareTroyans/demos/supervisor/nexys4ddr/supervisor/supervisor.sim/sim_1/synth/func/xsim/cpu_testbench_func_synth.v
// Design      : board
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7a100tcsg324-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

module addressalu
   (out,
    D,
    Q,
    \state_reg[2] ,
    \opcode_reg[2] ,
    \PC_reg[5] ,
    \addressalu_operand2_reg[3] ,
    \addressalu_operand1_reg[5] ,
    addressalu_opcode,
    CLK);
  output [7:0]out;
  output [5:0]D;
  input [5:0]Q;
  input [1:0]\state_reg[2] ;
  input \opcode_reg[2] ;
  input [5:0]\PC_reg[5] ;
  input [3:0]\addressalu_operand2_reg[3] ;
  input [5:0]\addressalu_operand1_reg[5] ;
  input addressalu_opcode;
  input CLK;

  wire CLK;
  wire [5:0]D;
  wire [5:0]\PC_reg[5] ;
  wire [5:0]Q;
  wire addressalu_opcode;
  wire [5:0]\addressalu_operand1_reg[5] ;
  wire [3:0]\addressalu_operand2_reg[3] ;
  wire \opcode_reg[2] ;
  (* RTL_KEEP = "true" *) wire [7:0]out;
  wire [6:0]p_0_in__0;
  wire [6:0]result;
  wire result0__0_carry__0_i_1_n_0;
  wire result0__0_carry__0_i_2_n_0;
  wire result0__0_carry__0_i_3_n_0;
  wire result0__0_carry__0_i_4_n_0;
  wire result0__0_carry__0_i_5_n_0;
  wire result0__0_carry__0_n_0;
  wire result0__0_carry__0_n_2;
  wire result0__0_carry__0_n_3;
  wire result0__0_carry_i_1_n_0;
  wire result0__0_carry_i_2_n_0;
  wire result0__0_carry_i_3_n_0;
  wire result0__0_carry_i_4_n_0;
  wire result0__0_carry_i_5_n_0;
  wire result0__0_carry_i_6_n_0;
  wire result0__0_carry_i_7_n_0;
  wire result0__0_carry_n_0;
  wire result0__0_carry_n_1;
  wire result0__0_carry_n_2;
  wire result0__0_carry_n_3;
  wire \result[6]_i_2_n_0 ;
  wire \result[7]_i_1__0_n_0 ;
  wire [1:0]\state_reg[2] ;
  wire [2:2]NLW_result0__0_carry__0_CO_UNCONNECTED;
  wire [3:3]NLW_result0__0_carry__0_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h00AF00AC00A000AC)) 
    \PC[0]_i_1 
       (.I0(out[0]),
        .I1(Q[0]),
        .I2(\state_reg[2] [0]),
        .I3(\state_reg[2] [1]),
        .I4(\opcode_reg[2] ),
        .I5(\PC_reg[5] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFB8B8BB88)) 
    \PC[1]_i_1 
       (.I0(out[1]),
        .I1(\state_reg[2] [0]),
        .I2(\PC_reg[5] [1]),
        .I3(Q[1]),
        .I4(\opcode_reg[2] ),
        .I5(\state_reg[2] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFB8B8BB88)) 
    \PC[2]_i_1 
       (.I0(out[2]),
        .I1(\state_reg[2] [0]),
        .I2(\PC_reg[5] [2]),
        .I3(Q[2]),
        .I4(\opcode_reg[2] ),
        .I5(\state_reg[2] [1]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFB8B8BB88)) 
    \PC[3]_i_1 
       (.I0(out[3]),
        .I1(\state_reg[2] [0]),
        .I2(\PC_reg[5] [3]),
        .I3(Q[3]),
        .I4(\opcode_reg[2] ),
        .I5(\state_reg[2] [1]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h00AF00AC00A000AC)) 
    \PC[4]_i_1 
       (.I0(out[4]),
        .I1(Q[4]),
        .I2(\state_reg[2] [0]),
        .I3(\state_reg[2] [1]),
        .I4(\opcode_reg[2] ),
        .I5(\PC_reg[5] [4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFB8B8BB88)) 
    \PC[5]_i_2 
       (.I0(out[5]),
        .I1(\state_reg[2] [0]),
        .I2(\PC_reg[5] [5]),
        .I3(Q[5]),
        .I4(\opcode_reg[2] ),
        .I5(\state_reg[2] [1]),
        .O(D[5]));
  CARRY4 result0__0_carry
       (.CI(1'b0),
        .CO({result0__0_carry_n_0,result0__0_carry_n_1,result0__0_carry_n_2,result0__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({result0__0_carry_i_1_n_0,result0__0_carry_i_2_n_0,result0__0_carry_i_3_n_0,\addressalu_operand1_reg[5] [0]}),
        .O(result[3:0]),
        .S({result0__0_carry_i_4_n_0,result0__0_carry_i_5_n_0,result0__0_carry_i_6_n_0,result0__0_carry_i_7_n_0}));
  CARRY4 result0__0_carry__0
       (.CI(result0__0_carry_n_0),
        .CO({result0__0_carry__0_n_0,NLW_result0__0_carry__0_CO_UNCONNECTED[2],result0__0_carry__0_n_2,result0__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,\addressalu_operand1_reg[5] [5],result0__0_carry__0_i_1_n_0,result0__0_carry__0_i_2_n_0}),
        .O({NLW_result0__0_carry__0_O_UNCONNECTED[3],result[6:4]}),
        .S({1'b1,result0__0_carry__0_i_3_n_0,result0__0_carry__0_i_4_n_0,result0__0_carry__0_i_5_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    result0__0_carry__0_i_1
       (.I0(\addressalu_operand1_reg[5] [4]),
        .I1(\addressalu_operand2_reg[3] [3]),
        .O(result0__0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    result0__0_carry__0_i_2
       (.I0(\addressalu_operand1_reg[5] [3]),
        .I1(\addressalu_operand2_reg[3] [3]),
        .O(result0__0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    result0__0_carry__0_i_3
       (.I0(\addressalu_operand1_reg[5] [5]),
        .O(result0__0_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    result0__0_carry__0_i_4
       (.I0(\addressalu_operand2_reg[3] [3]),
        .I1(\addressalu_operand1_reg[5] [4]),
        .I2(\addressalu_operand1_reg[5] [5]),
        .O(result0__0_carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    result0__0_carry__0_i_5
       (.I0(\addressalu_operand1_reg[5] [3]),
        .I1(\addressalu_operand2_reg[3] [3]),
        .I2(\addressalu_operand1_reg[5] [4]),
        .O(result0__0_carry__0_i_5_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    result0__0_carry_i_1
       (.I0(\addressalu_operand2_reg[3] [2]),
        .I1(\addressalu_operand1_reg[5] [2]),
        .O(result0__0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    result0__0_carry_i_2
       (.I0(\addressalu_operand1_reg[5] [1]),
        .I1(\addressalu_operand2_reg[3] [1]),
        .O(result0__0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    result0__0_carry_i_3
       (.I0(\addressalu_operand2_reg[3] [0]),
        .I1(\addressalu_operand2_reg[3] [3]),
        .O(result0__0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h1EE1)) 
    result0__0_carry_i_4
       (.I0(\addressalu_operand1_reg[5] [2]),
        .I1(\addressalu_operand2_reg[3] [2]),
        .I2(\addressalu_operand2_reg[3] [3]),
        .I3(\addressalu_operand1_reg[5] [3]),
        .O(result0__0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h1EE1)) 
    result0__0_carry_i_5
       (.I0(\addressalu_operand2_reg[3] [1]),
        .I1(\addressalu_operand1_reg[5] [1]),
        .I2(\addressalu_operand2_reg[3] [2]),
        .I3(\addressalu_operand1_reg[5] [2]),
        .O(result0__0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h2DD2)) 
    result0__0_carry_i_6
       (.I0(\addressalu_operand2_reg[3] [3]),
        .I1(\addressalu_operand2_reg[3] [0]),
        .I2(\addressalu_operand2_reg[3] [1]),
        .I3(\addressalu_operand1_reg[5] [1]),
        .O(result0__0_carry_i_6_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    result0__0_carry_i_7
       (.I0(\addressalu_operand2_reg[3] [0]),
        .I1(\addressalu_operand2_reg[3] [3]),
        .I2(\addressalu_operand1_reg[5] [0]),
        .O(result0__0_carry_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \result[0]_i_1 
       (.I0(\addressalu_operand1_reg[5] [0]),
        .I1(addressalu_opcode),
        .I2(result[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h6F60)) 
    \result[1]_i_1 
       (.I0(\addressalu_operand1_reg[5] [0]),
        .I1(\addressalu_operand1_reg[5] [1]),
        .I2(addressalu_opcode),
        .I3(result[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h78FF7800)) 
    \result[2]_i_1 
       (.I0(\addressalu_operand1_reg[5] [1]),
        .I1(\addressalu_operand1_reg[5] [0]),
        .I2(\addressalu_operand1_reg[5] [2]),
        .I3(addressalu_opcode),
        .I4(result[2]),
        .O(p_0_in__0[2]));
  LUT6 #(
    .INIT(64'h7F80FFFF7F800000)) 
    \result[3]_i_1 
       (.I0(\addressalu_operand1_reg[5] [2]),
        .I1(\addressalu_operand1_reg[5] [0]),
        .I2(\addressalu_operand1_reg[5] [1]),
        .I3(\addressalu_operand1_reg[5] [3]),
        .I4(addressalu_opcode),
        .I5(result[3]),
        .O(p_0_in__0[3]));
  LUT5 #(
    .INIT(32'h78FF7800)) 
    \result[4]_i_1 
       (.I0(\addressalu_operand1_reg[5] [3]),
        .I1(\result[6]_i_2_n_0 ),
        .I2(\addressalu_operand1_reg[5] [4]),
        .I3(addressalu_opcode),
        .I4(result[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7F80FFFF7F800000)) 
    \result[5]_i_1 
       (.I0(\result[6]_i_2_n_0 ),
        .I1(\addressalu_operand1_reg[5] [3]),
        .I2(\addressalu_operand1_reg[5] [4]),
        .I3(\addressalu_operand1_reg[5] [5]),
        .I4(addressalu_opcode),
        .I5(result[5]),
        .O(p_0_in__0[5]));
  LUT6 #(
    .INIT(64'hC0AA00AA00AA00AA)) 
    \result[6]_i_1 
       (.I0(result[6]),
        .I1(\result[6]_i_2_n_0 ),
        .I2(\addressalu_operand1_reg[5] [3]),
        .I3(addressalu_opcode),
        .I4(\addressalu_operand1_reg[5] [5]),
        .I5(\addressalu_operand1_reg[5] [4]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \result[6]_i_2 
       (.I0(\addressalu_operand1_reg[5] [1]),
        .I1(\addressalu_operand1_reg[5] [0]),
        .I2(\addressalu_operand1_reg[5] [2]),
        .O(\result[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \result[7]_i_1__0 
       (.I0(result0__0_carry__0_n_0),
        .I1(addressalu_opcode),
        .O(\result[7]_i_1__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(out[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(out[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(out[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(out[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(out[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(out[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(out[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\result[7]_i_1__0_n_0 ),
        .Q(out[7]),
        .R(1'b0));
endmodule

module alu
   (out,
    D,
    \data_reg[3] ,
    \A_reg[7] ,
    \state_reg[0] ,
    \opcode_reg[2] ,
    reset,
    \state_reg[0]_0 ,
    alu_opcode_reg,
    Q,
    CLK);
  output out;
  output [7:0]D;
  input [3:0]\data_reg[3] ;
  input [7:0]\A_reg[7] ;
  input [0:0]\state_reg[0] ;
  input \opcode_reg[2] ;
  input reset;
  input \state_reg[0]_0 ;
  input alu_opcode_reg;
  input [7:0]Q;
  input CLK;

  wire [7:0]\A_reg[7] ;
  wire CLK;
  wire [7:0]D;
  wire [7:0]Q;
  wire alu_opcode_reg;
  wire [3:0]\data_reg[3] ;
  wire \opcode_reg[2] ;
  (* RTL_KEEP = "true" *) wire out;
  wire [7:0]p_1_in;
  wire reset;
  wire \result[7]_i_1_n_0 ;
  wire \result[7]_i_3_n_0 ;
  wire \result_reg_n_0_[0] ;
  wire \result_reg_n_0_[1] ;
  wire \result_reg_n_0_[2] ;
  wire \result_reg_n_0_[3] ;
  wire \result_reg_n_0_[4] ;
  wire \result_reg_n_0_[5] ;
  wire \result_reg_n_0_[6] ;
  wire \result_reg_n_0_[7] ;
  wire [0:0]\state_reg[0] ;
  wire \state_reg[0]_0 ;
  wire zero_inferred_i_2_n_0;

  LUT6 #(
    .INIT(64'hF0F0F0F0CCF0CCAA)) 
    \A[0]_i_1 
       (.I0(\data_reg[3] [0]),
        .I1(\result_reg_n_0_[0] ),
        .I2(\A_reg[7] [0]),
        .I3(\state_reg[0] ),
        .I4(\opcode_reg[2] ),
        .I5(reset),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF0F0F0F0CCF0CCAA)) 
    \A[1]_i_1 
       (.I0(\data_reg[3] [1]),
        .I1(\result_reg_n_0_[1] ),
        .I2(\A_reg[7] [1]),
        .I3(\state_reg[0] ),
        .I4(\opcode_reg[2] ),
        .I5(reset),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hF0F0F0F0CCF0CCAA)) 
    \A[2]_i_1 
       (.I0(\data_reg[3] [2]),
        .I1(\result_reg_n_0_[2] ),
        .I2(\A_reg[7] [2]),
        .I3(\state_reg[0] ),
        .I4(\opcode_reg[2] ),
        .I5(reset),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hF0F0F0F0CCF0CCAA)) 
    \A[3]_i_1 
       (.I0(\data_reg[3] [3]),
        .I1(\result_reg_n_0_[3] ),
        .I2(\A_reg[7] [3]),
        .I3(\state_reg[0] ),
        .I4(\opcode_reg[2] ),
        .I5(reset),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h8888F888)) 
    \A[4]_i_1 
       (.I0(\A_reg[7] [4]),
        .I1(\state_reg[0]_0 ),
        .I2(\result_reg_n_0_[4] ),
        .I3(\state_reg[0] ),
        .I4(reset),
        .O(D[4]));
  LUT5 #(
    .INIT(32'h8888F888)) 
    \A[5]_i_1 
       (.I0(\A_reg[7] [5]),
        .I1(\state_reg[0]_0 ),
        .I2(\result_reg_n_0_[5] ),
        .I3(\state_reg[0] ),
        .I4(reset),
        .O(D[5]));
  LUT5 #(
    .INIT(32'h8888F888)) 
    \A[6]_i_1 
       (.I0(\A_reg[7] [6]),
        .I1(\state_reg[0]_0 ),
        .I2(\result_reg_n_0_[6] ),
        .I3(\state_reg[0] ),
        .I4(reset),
        .O(D[6]));
  LUT5 #(
    .INIT(32'h8888F888)) 
    \A[7]_i_2 
       (.I0(\A_reg[7] [7]),
        .I1(\state_reg[0]_0 ),
        .I2(\result_reg_n_0_[7] ),
        .I3(\state_reg[0] ),
        .I4(reset),
        .O(D[7]));
  LUT1 #(
    .INIT(2'h1)) 
    \result[0]_i_1 
       (.I0(Q[0]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \result[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \result[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \result[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \result[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_1_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \result[5]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \result[6]_i_1 
       (.I0(\result[7]_i_3_n_0 ),
        .I1(Q[6]),
        .O(p_1_in[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \result[7]_i_1 
       (.I0(alu_opcode_reg),
        .O(\result[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \result[7]_i_2 
       (.I0(\result[7]_i_3_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \result[7]_i_3 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(\result[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[0]),
        .Q(\result_reg_n_0_[0] ),
        .R(\result[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[1]),
        .Q(\result_reg_n_0_[1] ),
        .R(\result[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[2]),
        .Q(\result_reg_n_0_[2] ),
        .R(\result[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[3]),
        .Q(\result_reg_n_0_[3] ),
        .R(\result[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[4]),
        .Q(\result_reg_n_0_[4] ),
        .R(\result[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[5]),
        .Q(\result_reg_n_0_[5] ),
        .R(\result[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[6]),
        .Q(\result_reg_n_0_[6] ),
        .R(\result[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \result_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_1_in[7]),
        .Q(\result_reg_n_0_[7] ),
        .R(\result[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    zero_inferred_i_1
       (.I0(\result_reg_n_0_[1] ),
        .I1(\result_reg_n_0_[0] ),
        .I2(zero_inferred_i_2_n_0),
        .O(out));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    zero_inferred_i_2
       (.I0(\result_reg_n_0_[4] ),
        .I1(\result_reg_n_0_[5] ),
        .I2(\result_reg_n_0_[2] ),
        .I3(\result_reg_n_0_[3] ),
        .I4(\result_reg_n_0_[7] ),
        .I5(\result_reg_n_0_[6] ),
        .O(zero_inferred_i_2_n_0));
endmodule

(* NotValidForBitStream *)
module board
   (Clock,
    reset_button,
    step_button,
    run_switch,
    fast_switch,
    SEG,
    DIGIT,
    humanClock_led,
    run_led,
    supervisor_led,
    error_led,
    FETCH_led,
    FETCH_RETURN_led,
    DECODE_led,
    NOP_led,
    SET_led,
    INC_led,
    SVC_led,
    RET_led,
    JNZ_led,
    OUT_led,
    STORE_RETURN_ADDRESS_led,
    BRANCHING_led,
    INC_A_led,
    NEXT_INSTRUCTION_ADDRESS_led);
  input Clock;
  input reset_button;
  input step_button;
  input run_switch;
  input fast_switch;
  output [7:0]SEG;
  output [7:0]DIGIT;
  output humanClock_led;
  output run_led;
  output supervisor_led;
  output error_led;
  output FETCH_led;
  output FETCH_RETURN_led;
  output DECODE_led;
  output NOP_led;
  output SET_led;
  output INC_led;
  output SVC_led;
  output RET_led;
  output JNZ_led;
  output OUT_led;
  output STORE_RETURN_ADDRESS_led;
  output BRANCHING_led;
  output INC_A_led;
  output NEXT_INSTRUCTION_ADDRESS_led;

  (* RTL_KEEP = "cpu " *) wire [7:0]A;
  wire BRANCHING_led;
  wire BRANCHING_led_OBUF;
  wire Clock;
  wire Clock_IBUF;
  wire Clock_IBUF_BUFG;
  wire DECODE_led;
  wire DECODE_led_OBUF;
  wire [7:0]DIGIT;
  wire [7:0]DIGIT_OBUF;
  wire FETCH_RETURN_led;
  wire FETCH_RETURN_led_OBUF;
  wire FETCH_led;
  wire FETCH_led_OBUF;
  wire INC_A_led;
  wire INC_A_led_OBUF;
  wire INC_led;
  wire INC_led_OBUF;
  wire JNZ_led;
  wire JNZ_led_OBUF;
  wire NEXT_INSTRUCTION_ADDRESS_led;
  wire NEXT_INSTRUCTION_ADDRESS_led_OBUF;
  wire NOP_led;
  wire NOP_led_OBUF;
  wire OUT_led;
  wire OUT_led_OBUF;
  (* RTL_KEEP = "cpu " *) wire [5:0]PC;
  wire RET_led;
  wire RET_led_OBUF;
  wire [7:0]SEG;
  wire [7:1]SEG_OBUF;
  wire SET_led;
  wire SET_led_OBUF;
  wire STORE_RETURN_ADDRESS_led;
  wire STORE_RETURN_ADDRESS_led_OBUF;
  wire SVC_led;
  wire SVC_led_OBUF;
  wire cpu_n_35;
  wire cpu_n_36;
  wire cpu_n_37;
  wire cpu_n_38;
  wire cpu_n_39;
  wire cpu_n_40;
  wire [7:0]data;
  (* RTL_KEEP = "cpu " *) wire [3:0]data__0;
  (* RTL_KEEP = "cpu " *) wire error;
  wire error_led;
  wire fast;
  wire fast_switch;
  wire fast_switch_IBUF;
  wire humanClock_led;
  wire humanClock_led_OBUF;
  wire humanClock_led_OBUF_BUFG;
  wire [7:0]mem;
  (* RTL_KEEP = "cpu " *) wire [3:0]opcode;
  wire reset;
  wire reset_button;
  wire reset_button_IBUF;
  wire run_debouncer_n_1;
  wire run_led;
  wire run_led_OBUF;
  wire run_switch;
  wire run_switch_IBUF;
  (* RTL_KEEP = "cpu " *) wire [3:0]state;
  wire step;
  wire step_button;
  wire step_button_IBUF;
  (* RTL_KEEP = "cpu " *) wire supervisor;
  wire supervisor_led;

  OBUF BRANCHING_led_OBUF_inst
       (.I(BRANCHING_led_OBUF),
        .O(BRANCHING_led));
  LUT4 #(
    .INIT(16'h0200)) 
    BRANCHING_led_OBUF_inst_i_1
       (.I0(state[0]),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[1]),
        .O(BRANCHING_led_OBUF));
  BUFG Clock_IBUF_BUFG_inst
       (.I(Clock_IBUF),
        .O(Clock_IBUF_BUFG));
  IBUF Clock_IBUF_inst
       (.I(Clock),
        .O(Clock_IBUF));
  OBUF DECODE_led_OBUF_inst
       (.I(DECODE_led_OBUF),
        .O(DECODE_led));
  LUT4 #(
    .INIT(16'h0004)) 
    DECODE_led_OBUF_inst_i_1
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .O(DECODE_led_OBUF));
  OBUF \DIGIT_OBUF[0]_inst 
       (.I(DIGIT_OBUF[0]),
        .O(DIGIT[0]));
  OBUF \DIGIT_OBUF[1]_inst 
       (.I(DIGIT_OBUF[1]),
        .O(DIGIT[1]));
  OBUF \DIGIT_OBUF[2]_inst 
       (.I(DIGIT_OBUF[2]),
        .O(DIGIT[2]));
  OBUF \DIGIT_OBUF[3]_inst 
       (.I(DIGIT_OBUF[3]),
        .O(DIGIT[3]));
  OBUF \DIGIT_OBUF[4]_inst 
       (.I(DIGIT_OBUF[4]),
        .O(DIGIT[4]));
  OBUF \DIGIT_OBUF[5]_inst 
       (.I(DIGIT_OBUF[5]),
        .O(DIGIT[5]));
  OBUF \DIGIT_OBUF[6]_inst 
       (.I(DIGIT_OBUF[6]),
        .O(DIGIT[6]));
  OBUF \DIGIT_OBUF[7]_inst 
       (.I(DIGIT_OBUF[7]),
        .O(DIGIT[7]));
  OBUF FETCH_RETURN_led_OBUF_inst
       (.I(FETCH_RETURN_led_OBUF),
        .O(FETCH_RETURN_led));
  LUT4 #(
    .INIT(16'h0002)) 
    FETCH_RETURN_led_OBUF_inst_i_1
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[3]),
        .I3(state[2]),
        .O(FETCH_RETURN_led_OBUF));
  OBUF FETCH_led_OBUF_inst
       (.I(FETCH_led_OBUF),
        .O(FETCH_led));
  LUT4 #(
    .INIT(16'h0001)) 
    FETCH_led_OBUF_inst_i_1
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[0]),
        .O(FETCH_led_OBUF));
  OBUF INC_A_led_OBUF_inst
       (.I(INC_A_led_OBUF),
        .O(INC_A_led));
  LUT4 #(
    .INIT(16'h2000)) 
    INC_A_led_OBUF_inst_i_1
       (.I0(state[0]),
        .I1(state[3]),
        .I2(state[1]),
        .I3(state[2]),
        .O(INC_A_led_OBUF));
  OBUF INC_led_OBUF_inst
       (.I(INC_led_OBUF),
        .O(INC_led));
  LUT4 #(
    .INIT(16'h0002)) 
    INC_led_OBUF_inst_i_1
       (.I0(opcode[3]),
        .I1(opcode[2]),
        .I2(opcode[1]),
        .I3(opcode[0]),
        .O(INC_led_OBUF));
  OBUF JNZ_led_OBUF_inst
       (.I(JNZ_led_OBUF),
        .O(JNZ_led));
  LUT4 #(
    .INIT(16'h0002)) 
    JNZ_led_OBUF_inst_i_1
       (.I0(opcode[0]),
        .I1(opcode[2]),
        .I2(opcode[3]),
        .I3(opcode[1]),
        .O(JNZ_led_OBUF));
  OBUF NEXT_INSTRUCTION_ADDRESS_led_OBUF_inst
       (.I(NEXT_INSTRUCTION_ADDRESS_led_OBUF),
        .O(NEXT_INSTRUCTION_ADDRESS_led));
  LUT4 #(
    .INIT(16'h0002)) 
    NEXT_INSTRUCTION_ADDRESS_led_OBUF_inst_i_1
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .O(NEXT_INSTRUCTION_ADDRESS_led_OBUF));
  OBUF NOP_led_OBUF_inst
       (.I(NOP_led_OBUF),
        .O(NOP_led));
  LUT4 #(
    .INIT(16'h0008)) 
    NOP_led_OBUF_inst_i_1
       (.I0(opcode[0]),
        .I1(opcode[3]),
        .I2(opcode[2]),
        .I3(opcode[1]),
        .O(NOP_led_OBUF));
  OBUF OUT_led_OBUF_inst
       (.I(OUT_led_OBUF),
        .O(OUT_led));
  LUT4 #(
    .INIT(16'h0020)) 
    OUT_led_OBUF_inst_i_1
       (.I0(opcode[0]),
        .I1(opcode[3]),
        .I2(opcode[1]),
        .I3(opcode[2]),
        .O(OUT_led_OBUF));
  OBUF RET_led_OBUF_inst
       (.I(RET_led_OBUF),
        .O(RET_led));
  LUT4 #(
    .INIT(16'h0001)) 
    RET_led_OBUF_inst_i_1
       (.I0(opcode[2]),
        .I1(opcode[3]),
        .I2(opcode[1]),
        .I3(opcode[0]),
        .O(RET_led_OBUF));
  OBUF \SEG_OBUF[0]_inst 
       (.I(1'b1),
        .O(SEG[0]));
  OBUF \SEG_OBUF[1]_inst 
       (.I(SEG_OBUF[1]),
        .O(SEG[1]));
  OBUF \SEG_OBUF[2]_inst 
       (.I(SEG_OBUF[2]),
        .O(SEG[2]));
  OBUF \SEG_OBUF[3]_inst 
       (.I(SEG_OBUF[3]),
        .O(SEG[3]));
  OBUF \SEG_OBUF[4]_inst 
       (.I(SEG_OBUF[4]),
        .O(SEG[4]));
  OBUF \SEG_OBUF[5]_inst 
       (.I(SEG_OBUF[5]),
        .O(SEG[5]));
  OBUF \SEG_OBUF[6]_inst 
       (.I(SEG_OBUF[6]),
        .O(SEG[6]));
  OBUF \SEG_OBUF[7]_inst 
       (.I(SEG_OBUF[7]),
        .O(SEG[7]));
  OBUF SET_led_OBUF_inst
       (.I(SET_led_OBUF),
        .O(SET_led));
  LUT4 #(
    .INIT(16'h0004)) 
    SET_led_OBUF_inst_i_1
       (.I0(opcode[3]),
        .I1(opcode[1]),
        .I2(opcode[2]),
        .I3(opcode[0]),
        .O(SET_led_OBUF));
  OBUF STORE_RETURN_ADDRESS_led_OBUF_inst
       (.I(STORE_RETURN_ADDRESS_led_OBUF),
        .O(STORE_RETURN_ADDRESS_led));
  LUT4 #(
    .INIT(16'h0040)) 
    STORE_RETURN_ADDRESS_led_OBUF_inst_i_1
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .O(STORE_RETURN_ADDRESS_led_OBUF));
  OBUF SVC_led_OBUF_inst
       (.I(SVC_led_OBUF),
        .O(SVC_led));
  LUT4 #(
    .INIT(16'h0010)) 
    SVC_led_OBUF_inst_i_1
       (.I0(opcode[1]),
        .I1(opcode[3]),
        .I2(opcode[2]),
        .I3(opcode[0]),
        .O(SVC_led_OBUF));
  counter counter
       (.Clock_IBUF_BUFG(Clock_IBUF_BUFG),
        .fast(fast),
        .humanClock_led_OBUF(humanClock_led_OBUF),
        .reset(reset),
        .state_reg(run_debouncer_n_1));
  cpu cpu
       (.A(A),
        .CLK(humanClock_led_OBUF_BUFG),
        .D(PC),
        .Q({data[7:2],data[0]}),
        .data(data__0),
        .\data_reg[7] ({mem[7:2],mem[0]}),
        .\data_reg[7]_0 ({cpu_n_35,cpu_n_36,cpu_n_37,cpu_n_38,cpu_n_39,cpu_n_40}),
        .error(error),
        .opcode(opcode),
        .out(supervisor),
        .reset(reset),
        .state(state));
  display_7_seg display
       (.Clock_IBUF_BUFG(Clock_IBUF_BUFG),
        .DIGIT_OBUF(DIGIT_OBUF),
        .\PC_reg[5] (PC),
        .Q(SEG_OBUF),
        .\address_bus_reg[5] ({cpu_n_35,cpu_n_36,cpu_n_37,cpu_n_38,cpu_n_39,cpu_n_40}),
        .\data_reg[3] (data__0),
        .\opcode_reg[3] (opcode),
        .out(A));
  OBUF error_led_OBUF_inst
       (.I(error),
        .O(error_led));
  debouncer fast_debouncer
       (.Clock_IBUF_BUFG(Clock_IBUF_BUFG),
        .fast(fast),
        .fast_switch_IBUF(fast_switch_IBUF));
  IBUF fast_switch_IBUF_inst
       (.I(fast_switch),
        .O(fast_switch_IBUF));
  BUFG humanClock_led_OBUF_BUFG_inst
       (.I(humanClock_led_OBUF),
        .O(humanClock_led_OBUF_BUFG));
  OBUF humanClock_led_OBUF_inst
       (.I(humanClock_led_OBUF_BUFG),
        .O(humanClock_led));
  IBUF reset_button_IBUF_inst
       (.I(reset_button),
        .O(reset_button_IBUF));
  debouncer_0 reset_debouncer
       (.Clock_IBUF_BUFG(Clock_IBUF_BUFG),
        .reset(reset),
        .reset_button_IBUF(reset_button_IBUF));
  rom rom
       (.CLK(humanClock_led_OBUF_BUFG),
        .D({mem[7:2],mem[0]}),
        .Q({data[7:2],data[0]}));
  debouncer_1 run_debouncer
       (.Clock_IBUF_BUFG(Clock_IBUF_BUFG),
        .\count_reg[27] (run_debouncer_n_1),
        .run_led_OBUF(run_led_OBUF),
        .run_switch_IBUF(run_switch_IBUF),
        .step(step));
  OBUF run_led_OBUF_inst
       (.I(run_led_OBUF),
        .O(run_led));
  IBUF run_switch_IBUF_inst
       (.I(run_switch),
        .O(run_switch_IBUF));
  IBUF step_button_IBUF_inst
       (.I(step_button),
        .O(step_button_IBUF));
  debouncer_2 step_debouncer
       (.Clock_IBUF_BUFG(Clock_IBUF_BUFG),
        .step(step),
        .step_button_IBUF(step_button_IBUF));
  OBUF supervisor_led_OBUF_inst
       (.I(supervisor),
        .O(supervisor_led));
endmodule

module counter
   (humanClock_led_OBUF,
    reset,
    state_reg,
    Clock_IBUF_BUFG,
    fast);
  output humanClock_led_OBUF;
  input reset;
  input state_reg;
  input Clock_IBUF_BUFG;
  input fast;

  wire Clock_IBUF_BUFG;
  wire \count[0]_i_3__3_n_0 ;
  wire \count_reg[0]_i_2__3_n_0 ;
  wire \count_reg[0]_i_2__3_n_1 ;
  wire \count_reg[0]_i_2__3_n_2 ;
  wire \count_reg[0]_i_2__3_n_3 ;
  wire \count_reg[0]_i_2__3_n_4 ;
  wire \count_reg[0]_i_2__3_n_5 ;
  wire \count_reg[0]_i_2__3_n_6 ;
  wire \count_reg[0]_i_2__3_n_7 ;
  wire \count_reg[12]_i_1__3_n_0 ;
  wire \count_reg[12]_i_1__3_n_1 ;
  wire \count_reg[12]_i_1__3_n_2 ;
  wire \count_reg[12]_i_1__3_n_3 ;
  wire \count_reg[12]_i_1__3_n_4 ;
  wire \count_reg[12]_i_1__3_n_5 ;
  wire \count_reg[12]_i_1__3_n_6 ;
  wire \count_reg[12]_i_1__3_n_7 ;
  wire \count_reg[16]_i_1__3_n_0 ;
  wire \count_reg[16]_i_1__3_n_1 ;
  wire \count_reg[16]_i_1__3_n_2 ;
  wire \count_reg[16]_i_1__3_n_3 ;
  wire \count_reg[16]_i_1__3_n_4 ;
  wire \count_reg[16]_i_1__3_n_5 ;
  wire \count_reg[16]_i_1__3_n_6 ;
  wire \count_reg[16]_i_1__3_n_7 ;
  wire \count_reg[20]_i_1_n_0 ;
  wire \count_reg[20]_i_1_n_1 ;
  wire \count_reg[20]_i_1_n_2 ;
  wire \count_reg[20]_i_1_n_3 ;
  wire \count_reg[20]_i_1_n_4 ;
  wire \count_reg[20]_i_1_n_5 ;
  wire \count_reg[20]_i_1_n_6 ;
  wire \count_reg[20]_i_1_n_7 ;
  wire \count_reg[24]_i_1_n_1 ;
  wire \count_reg[24]_i_1_n_2 ;
  wire \count_reg[24]_i_1_n_3 ;
  wire \count_reg[24]_i_1_n_4 ;
  wire \count_reg[24]_i_1_n_5 ;
  wire \count_reg[24]_i_1_n_6 ;
  wire \count_reg[24]_i_1_n_7 ;
  wire \count_reg[4]_i_1__3_n_0 ;
  wire \count_reg[4]_i_1__3_n_1 ;
  wire \count_reg[4]_i_1__3_n_2 ;
  wire \count_reg[4]_i_1__3_n_3 ;
  wire \count_reg[4]_i_1__3_n_4 ;
  wire \count_reg[4]_i_1__3_n_5 ;
  wire \count_reg[4]_i_1__3_n_6 ;
  wire \count_reg[4]_i_1__3_n_7 ;
  wire \count_reg[8]_i_1__3_n_0 ;
  wire \count_reg[8]_i_1__3_n_1 ;
  wire \count_reg[8]_i_1__3_n_2 ;
  wire \count_reg[8]_i_1__3_n_3 ;
  wire \count_reg[8]_i_1__3_n_4 ;
  wire \count_reg[8]_i_1__3_n_5 ;
  wire \count_reg[8]_i_1__3_n_6 ;
  wire \count_reg[8]_i_1__3_n_7 ;
  wire \count_reg_n_0_[0] ;
  wire \count_reg_n_0_[10] ;
  wire \count_reg_n_0_[11] ;
  wire \count_reg_n_0_[12] ;
  wire \count_reg_n_0_[13] ;
  wire \count_reg_n_0_[14] ;
  wire \count_reg_n_0_[15] ;
  wire \count_reg_n_0_[16] ;
  wire \count_reg_n_0_[17] ;
  wire \count_reg_n_0_[18] ;
  wire \count_reg_n_0_[19] ;
  wire \count_reg_n_0_[1] ;
  wire \count_reg_n_0_[20] ;
  wire \count_reg_n_0_[21] ;
  wire \count_reg_n_0_[22] ;
  wire \count_reg_n_0_[23] ;
  wire \count_reg_n_0_[24] ;
  wire \count_reg_n_0_[25] ;
  wire \count_reg_n_0_[26] ;
  wire \count_reg_n_0_[27] ;
  wire \count_reg_n_0_[2] ;
  wire \count_reg_n_0_[3] ;
  wire \count_reg_n_0_[4] ;
  wire \count_reg_n_0_[5] ;
  wire \count_reg_n_0_[6] ;
  wire \count_reg_n_0_[7] ;
  wire \count_reg_n_0_[8] ;
  wire \count_reg_n_0_[9] ;
  wire fast;
  wire humanClock_led_OBUF;
  wire reset;
  wire state_reg;
  wire [3:3]\NLW_count_reg[24]_i_1_CO_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_3__3 
       (.I0(\count_reg_n_0_[0] ),
        .O(\count[0]_i_3__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[0]_i_2__3_n_7 ),
        .Q(\count_reg_n_0_[0] ),
        .R(reset));
  CARRY4 \count_reg[0]_i_2__3 
       (.CI(1'b0),
        .CO({\count_reg[0]_i_2__3_n_0 ,\count_reg[0]_i_2__3_n_1 ,\count_reg[0]_i_2__3_n_2 ,\count_reg[0]_i_2__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\count_reg[0]_i_2__3_n_4 ,\count_reg[0]_i_2__3_n_5 ,\count_reg[0]_i_2__3_n_6 ,\count_reg[0]_i_2__3_n_7 }),
        .S({\count_reg_n_0_[3] ,\count_reg_n_0_[2] ,\count_reg_n_0_[1] ,\count[0]_i_3__3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[8]_i_1__3_n_5 ),
        .Q(\count_reg_n_0_[10] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[8]_i_1__3_n_4 ),
        .Q(\count_reg_n_0_[11] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[12]_i_1__3_n_7 ),
        .Q(\count_reg_n_0_[12] ),
        .R(reset));
  CARRY4 \count_reg[12]_i_1__3 
       (.CI(\count_reg[8]_i_1__3_n_0 ),
        .CO({\count_reg[12]_i_1__3_n_0 ,\count_reg[12]_i_1__3_n_1 ,\count_reg[12]_i_1__3_n_2 ,\count_reg[12]_i_1__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[12]_i_1__3_n_4 ,\count_reg[12]_i_1__3_n_5 ,\count_reg[12]_i_1__3_n_6 ,\count_reg[12]_i_1__3_n_7 }),
        .S({\count_reg_n_0_[15] ,\count_reg_n_0_[14] ,\count_reg_n_0_[13] ,\count_reg_n_0_[12] }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[13] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[12]_i_1__3_n_6 ),
        .Q(\count_reg_n_0_[13] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[14] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[12]_i_1__3_n_5 ),
        .Q(\count_reg_n_0_[14] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[15] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[12]_i_1__3_n_4 ),
        .Q(\count_reg_n_0_[15] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[16] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[16]_i_1__3_n_7 ),
        .Q(\count_reg_n_0_[16] ),
        .R(reset));
  CARRY4 \count_reg[16]_i_1__3 
       (.CI(\count_reg[12]_i_1__3_n_0 ),
        .CO({\count_reg[16]_i_1__3_n_0 ,\count_reg[16]_i_1__3_n_1 ,\count_reg[16]_i_1__3_n_2 ,\count_reg[16]_i_1__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[16]_i_1__3_n_4 ,\count_reg[16]_i_1__3_n_5 ,\count_reg[16]_i_1__3_n_6 ,\count_reg[16]_i_1__3_n_7 }),
        .S({\count_reg_n_0_[19] ,\count_reg_n_0_[18] ,\count_reg_n_0_[17] ,\count_reg_n_0_[16] }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[17] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[16]_i_1__3_n_6 ),
        .Q(\count_reg_n_0_[17] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[18] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[16]_i_1__3_n_5 ),
        .Q(\count_reg_n_0_[18] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[19] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[16]_i_1__3_n_4 ),
        .Q(\count_reg_n_0_[19] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[0]_i_2__3_n_6 ),
        .Q(\count_reg_n_0_[1] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[20] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[20]_i_1_n_7 ),
        .Q(\count_reg_n_0_[20] ),
        .R(reset));
  CARRY4 \count_reg[20]_i_1 
       (.CI(\count_reg[16]_i_1__3_n_0 ),
        .CO({\count_reg[20]_i_1_n_0 ,\count_reg[20]_i_1_n_1 ,\count_reg[20]_i_1_n_2 ,\count_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[20]_i_1_n_4 ,\count_reg[20]_i_1_n_5 ,\count_reg[20]_i_1_n_6 ,\count_reg[20]_i_1_n_7 }),
        .S({\count_reg_n_0_[23] ,\count_reg_n_0_[22] ,\count_reg_n_0_[21] ,\count_reg_n_0_[20] }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[21] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[20]_i_1_n_6 ),
        .Q(\count_reg_n_0_[21] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[22] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[20]_i_1_n_5 ),
        .Q(\count_reg_n_0_[22] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[23] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[20]_i_1_n_4 ),
        .Q(\count_reg_n_0_[23] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[24] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[24]_i_1_n_7 ),
        .Q(\count_reg_n_0_[24] ),
        .R(reset));
  CARRY4 \count_reg[24]_i_1 
       (.CI(\count_reg[20]_i_1_n_0 ),
        .CO({\NLW_count_reg[24]_i_1_CO_UNCONNECTED [3],\count_reg[24]_i_1_n_1 ,\count_reg[24]_i_1_n_2 ,\count_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[24]_i_1_n_4 ,\count_reg[24]_i_1_n_5 ,\count_reg[24]_i_1_n_6 ,\count_reg[24]_i_1_n_7 }),
        .S({\count_reg_n_0_[27] ,\count_reg_n_0_[26] ,\count_reg_n_0_[25] ,\count_reg_n_0_[24] }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[25] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[24]_i_1_n_6 ),
        .Q(\count_reg_n_0_[25] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[26] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[24]_i_1_n_5 ),
        .Q(\count_reg_n_0_[26] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[27] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[24]_i_1_n_4 ),
        .Q(\count_reg_n_0_[27] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[0]_i_2__3_n_5 ),
        .Q(\count_reg_n_0_[2] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[0]_i_2__3_n_4 ),
        .Q(\count_reg_n_0_[3] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[4]_i_1__3_n_7 ),
        .Q(\count_reg_n_0_[4] ),
        .R(reset));
  CARRY4 \count_reg[4]_i_1__3 
       (.CI(\count_reg[0]_i_2__3_n_0 ),
        .CO({\count_reg[4]_i_1__3_n_0 ,\count_reg[4]_i_1__3_n_1 ,\count_reg[4]_i_1__3_n_2 ,\count_reg[4]_i_1__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[4]_i_1__3_n_4 ,\count_reg[4]_i_1__3_n_5 ,\count_reg[4]_i_1__3_n_6 ,\count_reg[4]_i_1__3_n_7 }),
        .S({\count_reg_n_0_[7] ,\count_reg_n_0_[6] ,\count_reg_n_0_[5] ,\count_reg_n_0_[4] }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[4]_i_1__3_n_6 ),
        .Q(\count_reg_n_0_[5] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[4]_i_1__3_n_5 ),
        .Q(\count_reg_n_0_[6] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[4]_i_1__3_n_4 ),
        .Q(\count_reg_n_0_[7] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[8]_i_1__3_n_7 ),
        .Q(\count_reg_n_0_[8] ),
        .R(reset));
  CARRY4 \count_reg[8]_i_1__3 
       (.CI(\count_reg[4]_i_1__3_n_0 ),
        .CO({\count_reg[8]_i_1__3_n_0 ,\count_reg[8]_i_1__3_n_1 ,\count_reg[8]_i_1__3_n_2 ,\count_reg[8]_i_1__3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[8]_i_1__3_n_4 ,\count_reg[8]_i_1__3_n_5 ,\count_reg[8]_i_1__3_n_6 ,\count_reg[8]_i_1__3_n_7 }),
        .S({\count_reg_n_0_[11] ,\count_reg_n_0_[10] ,\count_reg_n_0_[9] ,\count_reg_n_0_[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(Clock_IBUF_BUFG),
        .CE(state_reg),
        .D(\count_reg[8]_i_1__3_n_6 ),
        .Q(\count_reg_n_0_[9] ),
        .R(reset));
  LUT3 #(
    .INIT(8'hB8)) 
    humanClock_led_OBUF_BUFG_inst_i_1
       (.I0(\count_reg_n_0_[24] ),
        .I1(fast),
        .I2(\count_reg_n_0_[27] ),
        .O(humanClock_led_OBUF));
endmodule

module cpu
   (out,
    state,
    opcode,
    D,
    error,
    data,
    A,
    \data_reg[7] ,
    \data_reg[7]_0 ,
    CLK,
    reset,
    Q);
  output out;
  output [3:0]state;
  output [3:0]opcode;
  output [5:0]D;
  output error;
  output [3:0]data;
  output [7:0]A;
  output [6:0]\data_reg[7] ;
  output [5:0]\data_reg[7]_0 ;
  input CLK;
  input reset;
  input [6:0]Q;

  (* RTL_KEEP = "true" *) wire [7:0]A;
  wire \A[3]_i_2_n_0 ;
  wire \A[7]_i_1_n_0 ;
  wire \A[7]_i_3_n_0 ;
  wire CLK;
  (* RTL_KEEP = "true" *) wire [5:0]D;
  wire \PC[5]_i_1_n_0 ;
  wire \PC[5]_i_3_n_0 ;
  wire [6:0]Q;
  wire RA;
  wire \RA_reg_n_0_[0] ;
  wire \RA_reg_n_0_[1] ;
  wire \RA_reg_n_0_[2] ;
  wire \RA_reg_n_0_[3] ;
  wire \RA_reg_n_0_[4] ;
  wire \RA_reg_n_0_[5] ;
  wire \address_bus[0]_i_1_n_0 ;
  wire \address_bus[1]_i_1_n_0 ;
  wire \address_bus[2]_i_1_n_0 ;
  wire \address_bus[3]_i_1_n_0 ;
  wire \address_bus[4]_i_1_n_0 ;
  wire \address_bus[5]_i_1_n_0 ;
  wire \address_bus[5]_i_2_n_0 ;
  wire \address_bus[5]_i_3_n_0 ;
  wire addressalu_n_10;
  wire addressalu_n_11;
  wire addressalu_n_12;
  wire addressalu_n_13;
  wire addressalu_n_8;
  wire addressalu_n_9;
  wire addressalu_opcode;
  wire addressalu_opcode_i_1_n_0;
  wire addressalu_opcode_i_2_n_0;
  wire addressalu_opcode_i_3_n_0;
  wire addressalu_opcode_i_4_n_0;
  wire \addressalu_operand1[5]_i_1_n_0 ;
  wire \addressalu_operand1[5]_i_2_n_0 ;
  wire \addressalu_operand1[5]_i_3_n_0 ;
  wire \addressalu_operand1_reg_n_0_[0] ;
  wire \addressalu_operand1_reg_n_0_[1] ;
  wire \addressalu_operand1_reg_n_0_[2] ;
  wire \addressalu_operand1_reg_n_0_[3] ;
  wire \addressalu_operand1_reg_n_0_[4] ;
  wire \addressalu_operand1_reg_n_0_[5] ;
  wire [3:0]addressalu_operand2;
  wire \addressalu_operand2[3]_i_1_n_0 ;
  wire alu_n_1;
  wire alu_n_2;
  wire alu_n_3;
  wire alu_n_4;
  wire alu_n_5;
  wire alu_n_6;
  wire alu_n_7;
  wire alu_n_8;
  wire alu_opcode_i_1_n_0;
  wire alu_opcode_reg_n_0;
  wire [7:0]alu_operand1;
  wire \alu_operand1[7]_i_1_n_0 ;
  wire \alu_operand1[7]_i_2_n_0 ;
  (* RTL_KEEP = "true" *) wire [3:0]data;
  wire \data[0]_i_1_n_0 ;
  wire \data[1]_i_1_n_0 ;
  wire \data[2]_i_1_n_0 ;
  wire \data[3]_i_1_n_0 ;
  wire [6:0]\data_reg[7] ;
  wire [5:0]\data_reg[7]_0 ;
  (* RTL_KEEP = "true" *) wire error;
  wire error_i_1_n_0;
  wire error_i_2_n_0;
  (* RTL_KEEP = "true" *) wire [3:0]opcode;
  wire \opcode[0]_i_1_n_0 ;
  wire \opcode[1]_i_1_n_0 ;
  wire \opcode[2]_i_1_n_0 ;
  wire \opcode[3]_i_1_n_0 ;
  wire \opcode[3]_i_2_n_0 ;
  (* RTL_KEEP = "true" *) wire out;
  wire reset;
  (* RTL_KEEP = "addressalu " *) wire [7:0]result_0;
  (* RTL_KEEP = "true" *) wire [3:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_3_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[3]_i_1_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[3]_i_3_n_0 ;
  wire supervisor_i_1_n_0;
  wire supervisor_i_2_n_0;
  (* RTL_KEEP = "alu " *) wire zero;

  LUT4 #(
    .INIT(16'hFEFF)) 
    \A[3]_i_2 
       (.I0(opcode[2]),
        .I1(opcode[0]),
        .I2(opcode[3]),
        .I3(opcode[1]),
        .O(\A[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBAAAAAAE)) 
    \A[7]_i_1 
       (.I0(reset),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(\A[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF55545555)) 
    \A[7]_i_3 
       (.I0(state[0]),
        .I1(opcode[2]),
        .I2(opcode[0]),
        .I3(opcode[3]),
        .I4(opcode[1]),
        .I5(reset),
        .O(\A[7]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[0] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_8),
        .Q(A[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[1] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_7),
        .Q(A[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[2] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_6),
        .Q(A[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[3] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_5),
        .Q(A[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[4] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_4),
        .Q(A[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[5] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_3),
        .Q(A[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[6] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_2),
        .Q(A[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \A_reg[7] 
       (.C(CLK),
        .CE(\A[7]_i_1_n_0 ),
        .D(alu_n_1),
        .Q(A[7]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h1304)) 
    \PC[5]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[1]),
        .O(\PC[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \PC[5]_i_3 
       (.I0(opcode[2]),
        .I1(opcode[0]),
        .I2(opcode[3]),
        .I3(opcode[1]),
        .O(\PC[5]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \PC_reg[0] 
       (.C(CLK),
        .CE(\PC[5]_i_1_n_0 ),
        .D(addressalu_n_13),
        .Q(D[0]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \PC_reg[1] 
       (.C(CLK),
        .CE(\PC[5]_i_1_n_0 ),
        .D(addressalu_n_12),
        .Q(D[1]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \PC_reg[2] 
       (.C(CLK),
        .CE(\PC[5]_i_1_n_0 ),
        .D(addressalu_n_11),
        .Q(D[2]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \PC_reg[3] 
       (.C(CLK),
        .CE(\PC[5]_i_1_n_0 ),
        .D(addressalu_n_10),
        .Q(D[3]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \PC_reg[4] 
       (.C(CLK),
        .CE(\PC[5]_i_1_n_0 ),
        .D(addressalu_n_9),
        .Q(D[4]),
        .S(reset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \PC_reg[5] 
       (.C(CLK),
        .CE(\PC[5]_i_1_n_0 ),
        .D(addressalu_n_8),
        .Q(D[5]),
        .R(reset));
  LUT5 #(
    .INIT(32'h00000200)) 
    \RA[5]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(reset),
        .I3(state[1]),
        .I4(state[0]),
        .O(RA));
  FDRE #(
    .INIT(1'b0)) 
    \RA_reg[0] 
       (.C(CLK),
        .CE(RA),
        .D(result_0[0]),
        .Q(\RA_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \RA_reg[1] 
       (.C(CLK),
        .CE(RA),
        .D(result_0[1]),
        .Q(\RA_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \RA_reg[2] 
       (.C(CLK),
        .CE(RA),
        .D(result_0[2]),
        .Q(\RA_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \RA_reg[3] 
       (.C(CLK),
        .CE(RA),
        .D(result_0[3]),
        .Q(\RA_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \RA_reg[4] 
       (.C(CLK),
        .CE(RA),
        .D(result_0[4]),
        .Q(\RA_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \RA_reg[5] 
       (.C(CLK),
        .CE(RA),
        .D(result_0[5]),
        .Q(\RA_reg_n_0_[5] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \address_bus[0]_i_1 
       (.I0(D[0]),
        .I1(state[3]),
        .O(\address_bus[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \address_bus[1]_i_1 
       (.I0(D[1]),
        .I1(state[3]),
        .O(\address_bus[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \address_bus[2]_i_1 
       (.I0(D[2]),
        .I1(state[3]),
        .O(\address_bus[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \address_bus[3]_i_1 
       (.I0(D[3]),
        .I1(state[3]),
        .O(\address_bus[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \address_bus[4]_i_1 
       (.I0(D[4]),
        .I1(state[3]),
        .O(\address_bus[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44C44444)) 
    \address_bus[5]_i_1 
       (.I0(state[3]),
        .I1(\state[0]_i_3_n_0 ),
        .I2(\address_bus[5]_i_3_n_0 ),
        .I3(opcode[3]),
        .I4(out),
        .O(\address_bus[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \address_bus[5]_i_2 
       (.I0(D[5]),
        .I1(state[3]),
        .O(\address_bus[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \address_bus[5]_i_3 
       (.I0(opcode[2]),
        .I1(opcode[1]),
        .I2(opcode[0]),
        .O(\address_bus[5]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \address_bus_reg[0] 
       (.C(CLK),
        .CE(\address_bus[5]_i_1_n_0 ),
        .D(\address_bus[0]_i_1_n_0 ),
        .Q(\data_reg[7]_0 [0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \address_bus_reg[1] 
       (.C(CLK),
        .CE(\address_bus[5]_i_1_n_0 ),
        .D(\address_bus[1]_i_1_n_0 ),
        .Q(\data_reg[7]_0 [1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \address_bus_reg[2] 
       (.C(CLK),
        .CE(\address_bus[5]_i_1_n_0 ),
        .D(\address_bus[2]_i_1_n_0 ),
        .Q(\data_reg[7]_0 [2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \address_bus_reg[3] 
       (.C(CLK),
        .CE(\address_bus[5]_i_1_n_0 ),
        .D(\address_bus[3]_i_1_n_0 ),
        .Q(\data_reg[7]_0 [3]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \address_bus_reg[4] 
       (.C(CLK),
        .CE(\address_bus[5]_i_1_n_0 ),
        .D(\address_bus[4]_i_1_n_0 ),
        .Q(\data_reg[7]_0 [4]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \address_bus_reg[5] 
       (.C(CLK),
        .CE(\address_bus[5]_i_1_n_0 ),
        .D(\address_bus[5]_i_2_n_0 ),
        .Q(\data_reg[7]_0 [5]),
        .R(reset));
  addressalu addressalu
       (.CLK(CLK),
        .D({addressalu_n_8,addressalu_n_9,addressalu_n_10,addressalu_n_11,addressalu_n_12,addressalu_n_13}),
        .\PC_reg[5] (D),
        .Q({\RA_reg_n_0_[5] ,\RA_reg_n_0_[4] ,\RA_reg_n_0_[3] ,\RA_reg_n_0_[2] ,\RA_reg_n_0_[1] ,\RA_reg_n_0_[0] }),
        .addressalu_opcode(addressalu_opcode),
        .\addressalu_operand1_reg[5] ({\addressalu_operand1_reg_n_0_[5] ,\addressalu_operand1_reg_n_0_[4] ,\addressalu_operand1_reg_n_0_[3] ,\addressalu_operand1_reg_n_0_[2] ,\addressalu_operand1_reg_n_0_[1] ,\addressalu_operand1_reg_n_0_[0] }),
        .\addressalu_operand2_reg[3] (addressalu_operand2),
        .\opcode_reg[2] (\PC[5]_i_3_n_0 ),
        .out(result_0),
        .\state_reg[2] (state[2:1]));
  LUT5 #(
    .INIT(32'h0000FE02)) 
    addressalu_opcode_i_1
       (.I0(addressalu_opcode),
        .I1(addressalu_opcode_i_2_n_0),
        .I2(addressalu_opcode_i_3_n_0),
        .I3(addressalu_opcode_i_4_n_0),
        .I4(reset),
        .O(addressalu_opcode_i_1_n_0));
  LUT5 #(
    .INIT(32'h01100010)) 
    addressalu_opcode_i_2
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(\addressalu_operand1[5]_i_2_n_0 ),
        .O(addressalu_opcode_i_2_n_0));
  LUT6 #(
    .INIT(64'h000E000000000000)) 
    addressalu_opcode_i_3
       (.I0(opcode[3]),
        .I1(zero),
        .I2(opcode[2]),
        .I3(opcode[1]),
        .I4(opcode[0]),
        .I5(\alu_operand1[7]_i_2_n_0 ),
        .O(addressalu_opcode_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFDF)) 
    addressalu_opcode_i_4
       (.I0(opcode[0]),
        .I1(opcode[1]),
        .I2(state[3]),
        .I3(opcode[3]),
        .I4(zero),
        .O(addressalu_opcode_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    addressalu_opcode_reg
       (.C(CLK),
        .CE(1'b1),
        .D(addressalu_opcode_i_1_n_0),
        .Q(addressalu_opcode),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0003C3000002C300)) 
    \addressalu_operand1[5]_i_1 
       (.I0(\addressalu_operand1[5]_i_2_n_0 ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(state[3]),
        .I5(\addressalu_operand1[5]_i_3_n_0 ),
        .O(\addressalu_operand1[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0003040C)) 
    \addressalu_operand1[5]_i_2 
       (.I0(out),
        .I1(opcode[1]),
        .I2(opcode[3]),
        .I3(opcode[0]),
        .I4(opcode[2]),
        .O(\addressalu_operand1[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \addressalu_operand1[5]_i_3 
       (.I0(opcode[2]),
        .I1(opcode[1]),
        .I2(opcode[0]),
        .O(\addressalu_operand1[5]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand1_reg[0] 
       (.C(CLK),
        .CE(\addressalu_operand1[5]_i_1_n_0 ),
        .D(D[0]),
        .Q(\addressalu_operand1_reg_n_0_[0] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand1_reg[1] 
       (.C(CLK),
        .CE(\addressalu_operand1[5]_i_1_n_0 ),
        .D(D[1]),
        .Q(\addressalu_operand1_reg_n_0_[1] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand1_reg[2] 
       (.C(CLK),
        .CE(\addressalu_operand1[5]_i_1_n_0 ),
        .D(D[2]),
        .Q(\addressalu_operand1_reg_n_0_[2] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand1_reg[3] 
       (.C(CLK),
        .CE(\addressalu_operand1[5]_i_1_n_0 ),
        .D(D[3]),
        .Q(\addressalu_operand1_reg_n_0_[3] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand1_reg[4] 
       (.C(CLK),
        .CE(\addressalu_operand1[5]_i_1_n_0 ),
        .D(D[4]),
        .Q(\addressalu_operand1_reg_n_0_[4] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand1_reg[5] 
       (.C(CLK),
        .CE(\addressalu_operand1[5]_i_1_n_0 ),
        .D(D[5]),
        .Q(\addressalu_operand1_reg_n_0_[5] ),
        .R(reset));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \addressalu_operand2[3]_i_1 
       (.I0(opcode[3]),
        .I1(zero),
        .I2(opcode[2]),
        .I3(opcode[1]),
        .I4(opcode[0]),
        .I5(\alu_operand1[7]_i_2_n_0 ),
        .O(\addressalu_operand2[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand2_reg[0] 
       (.C(CLK),
        .CE(\addressalu_operand2[3]_i_1_n_0 ),
        .D(data[0]),
        .Q(addressalu_operand2[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand2_reg[1] 
       (.C(CLK),
        .CE(\addressalu_operand2[3]_i_1_n_0 ),
        .D(data[1]),
        .Q(addressalu_operand2[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand2_reg[2] 
       (.C(CLK),
        .CE(\addressalu_operand2[3]_i_1_n_0 ),
        .D(data[2]),
        .Q(addressalu_operand2[2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \addressalu_operand2_reg[3] 
       (.C(CLK),
        .CE(\addressalu_operand2[3]_i_1_n_0 ),
        .D(data[3]),
        .Q(addressalu_operand2[3]),
        .R(reset));
  alu alu
       (.\A_reg[7] (A),
        .CLK(CLK),
        .D({alu_n_1,alu_n_2,alu_n_3,alu_n_4,alu_n_5,alu_n_6,alu_n_7,alu_n_8}),
        .Q(alu_operand1),
        .alu_opcode_reg(alu_opcode_reg_n_0),
        .\data_reg[3] (data),
        .\opcode_reg[2] (\A[3]_i_2_n_0 ),
        .out(zero),
        .reset(reset),
        .\state_reg[0] (state[0]),
        .\state_reg[0]_0 (\A[7]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    alu_opcode_i_1
       (.I0(alu_opcode_reg_n_0),
        .I1(\alu_operand1[7]_i_1_n_0 ),
        .I2(reset),
        .O(alu_opcode_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    alu_opcode_reg
       (.C(CLK),
        .CE(1'b1),
        .D(alu_opcode_i_1_n_0),
        .Q(alu_opcode_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00100000)) 
    \alu_operand1[7]_i_1 
       (.I0(opcode[1]),
        .I1(opcode[2]),
        .I2(opcode[3]),
        .I3(opcode[0]),
        .I4(\alu_operand1[7]_i_2_n_0 ),
        .O(\alu_operand1[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0100)) 
    \alu_operand1[7]_i_2 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .O(\alu_operand1[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[0] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[0]),
        .Q(alu_operand1[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[1] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[1]),
        .Q(alu_operand1[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[2] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[2]),
        .Q(alu_operand1[2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[3] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[3]),
        .Q(alu_operand1[3]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[4] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[4]),
        .Q(alu_operand1[4]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[5] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[5]),
        .Q(alu_operand1[5]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[6] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[6]),
        .Q(alu_operand1[6]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \alu_operand1_reg[7] 
       (.C(CLK),
        .CE(\alu_operand1[7]_i_1_n_0 ),
        .D(A[7]),
        .Q(alu_operand1[7]),
        .R(reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \data[0]_i_1 
       (.I0(data[0]),
        .I1(reset),
        .I2(Q[0]),
        .O(\data[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000004006602004)) 
    \data[0]_i_1__0 
       (.I0(\data_reg[7]_0 [4]),
        .I1(\data_reg[7]_0 [5]),
        .I2(\data_reg[7]_0 [2]),
        .I3(\data_reg[7]_0 [3]),
        .I4(\data_reg[7]_0 [1]),
        .I5(\data_reg[7]_0 [0]),
        .O(\data_reg[7] [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \data[1]_i_1 
       (.I0(data[1]),
        .I1(reset),
        .I2(Q[2]),
        .O(\data[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \data[2]_i_1 
       (.I0(data[2]),
        .I1(reset),
        .I2(Q[1]),
        .O(\data[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1000004006602004)) 
    \data[2]_i_1__0 
       (.I0(\data_reg[7]_0 [4]),
        .I1(\data_reg[7]_0 [5]),
        .I2(\data_reg[7]_0 [2]),
        .I3(\data_reg[7]_0 [3]),
        .I4(\data_reg[7]_0 [1]),
        .I5(\data_reg[7]_0 [0]),
        .O(\data_reg[7] [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \data[3]_i_1 
       (.I0(data[3]),
        .I1(reset),
        .I2(Q[2]),
        .O(\data[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1000004026000604)) 
    \data[3]_i_1__0 
       (.I0(\data_reg[7]_0 [4]),
        .I1(\data_reg[7]_0 [5]),
        .I2(\data_reg[7]_0 [2]),
        .I3(\data_reg[7]_0 [3]),
        .I4(\data_reg[7]_0 [1]),
        .I5(\data_reg[7]_0 [0]),
        .O(\data_reg[7] [2]));
  LUT6 #(
    .INIT(64'h2442646640024062)) 
    \data[4]_i_1 
       (.I0(\data_reg[7]_0 [4]),
        .I1(\data_reg[7]_0 [5]),
        .I2(\data_reg[7]_0 [2]),
        .I3(\data_reg[7]_0 [3]),
        .I4(\data_reg[7]_0 [1]),
        .I5(\data_reg[7]_0 [0]),
        .O(\data_reg[7] [3]));
  LUT6 #(
    .INIT(64'h3440640466642604)) 
    \data[5]_i_1 
       (.I0(\data_reg[7]_0 [4]),
        .I1(\data_reg[7]_0 [5]),
        .I2(\data_reg[7]_0 [2]),
        .I3(\data_reg[7]_0 [3]),
        .I4(\data_reg[7]_0 [1]),
        .I5(\data_reg[7]_0 [0]),
        .O(\data_reg[7] [4]));
  LUT6 #(
    .INIT(64'h0220420000000000)) 
    \data[6]_i_1 
       (.I0(\data_reg[7]_0 [4]),
        .I1(\data_reg[7]_0 [5]),
        .I2(\data_reg[7]_0 [2]),
        .I3(\data_reg[7]_0 [3]),
        .I4(\data_reg[7]_0 [1]),
        .I5(\data_reg[7]_0 [0]),
        .O(\data_reg[7] [5]));
  LUT6 #(
    .INIT(64'h0006002200024062)) 
    \data[7]_i_1 
       (.I0(\data_reg[7]_0 [4]),
        .I1(\data_reg[7]_0 [5]),
        .I2(\data_reg[7]_0 [2]),
        .I3(\data_reg[7]_0 [3]),
        .I4(\data_reg[7]_0 [1]),
        .I5(\data_reg[7]_0 [0]),
        .O(\data_reg[7] [6]));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[0] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\data[0]_i_1_n_0 ),
        .Q(data[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[1] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\data[1]_i_1_n_0 ),
        .Q(data[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[2] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\data[2]_i_1_n_0 ),
        .Q(data[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[3] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\data[3]_i_1_n_0 ),
        .Q(data[3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00E2)) 
    error_i_1
       (.I0(error),
        .I1(\alu_operand1[7]_i_2_n_0 ),
        .I2(error_i_2_n_0),
        .I3(reset),
        .O(error_i_1_n_0));
  LUT6 #(
    .INIT(64'hAAABAAAAAAAA88AA)) 
    error_i_2
       (.I0(error),
        .I1(opcode[3]),
        .I2(out),
        .I3(opcode[2]),
        .I4(opcode[1]),
        .I5(opcode[0]),
        .O(error_i_2_n_0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    error_reg
       (.C(CLK),
        .CE(1'b1),
        .D(error_i_1_n_0),
        .Q(error),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[0]_i_1 
       (.I0(opcode[0]),
        .I1(reset),
        .I2(Q[3]),
        .O(\opcode[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[1]_i_1 
       (.I0(opcode[1]),
        .I1(reset),
        .I2(Q[4]),
        .O(\opcode[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[2]_i_1 
       (.I0(opcode[2]),
        .I1(reset),
        .I2(Q[5]),
        .O(\opcode[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0010)) 
    \opcode[3]_i_1 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[0]),
        .I3(state[3]),
        .I4(reset),
        .O(\opcode[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[3]_i_2 
       (.I0(opcode[3]),
        .I1(reset),
        .I2(Q[6]),
        .O(\opcode[3]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opcode_reg[0] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\opcode[0]_i_1_n_0 ),
        .Q(opcode[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opcode_reg[1] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\opcode[1]_i_1_n_0 ),
        .Q(opcode[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opcode_reg[2] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\opcode[2]_i_1_n_0 ),
        .Q(opcode[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \opcode_reg[3] 
       (.C(CLK),
        .CE(\opcode[3]_i_1_n_0 ),
        .D(\opcode[3]_i_2_n_0 ),
        .Q(opcode[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h55D500005DD50000)) 
    \state[0]_i_1 
       (.I0(state[3]),
        .I1(\state[0]_i_2_n_0 ),
        .I2(opcode[3]),
        .I3(opcode[0]),
        .I4(\state[0]_i_3_n_0 ),
        .I5(zero),
        .O(\state[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[0]_i_2 
       (.I0(opcode[1]),
        .I1(opcode[2]),
        .O(\state[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[0]_i_3 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\state[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEE0EAA0A)) 
    \state[1]_i_1 
       (.I0(state[2]),
        .I1(\state[1]_i_2_n_0 ),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[3]),
        .O(\state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h01560556)) 
    \state[1]_i_2 
       (.I0(opcode[2]),
        .I1(opcode[0]),
        .I2(opcode[3]),
        .I3(opcode[1]),
        .I4(out),
        .O(\state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0003038000000000)) 
    \state[2]_i_1 
       (.I0(out),
        .I1(opcode[1]),
        .I2(opcode[0]),
        .I3(opcode[3]),
        .I4(opcode[2]),
        .I5(state[3]),
        .O(\state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2337)) 
    \state[3]_i_1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[2]),
        .O(\state[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \state[3]_i_2 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(\state[3]_i_3_n_0 ),
        .O(\state[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4444444040004000)) 
    \state[3]_i_3 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(opcode[1]),
        .I3(opcode[3]),
        .I4(opcode[0]),
        .I5(opcode[2]),
        .O(\state[3]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(CLK),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(CLK),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(CLK),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[2]_i_1_n_0 ),
        .Q(state[2]),
        .R(reset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[3] 
       (.C(CLK),
        .CE(\state[3]_i_1_n_0 ),
        .D(\state[3]_i_2_n_0 ),
        .Q(state[3]),
        .R(reset));
  LUT6 #(
    .INIT(64'h00000000EEE22E22)) 
    supervisor_i_1
       (.I0(out),
        .I1(\alu_operand1[7]_i_2_n_0 ),
        .I2(supervisor_i_2_n_0),
        .I3(opcode[2]),
        .I4(out),
        .I5(reset),
        .O(supervisor_i_1_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    supervisor_i_2
       (.I0(opcode[3]),
        .I1(opcode[0]),
        .I2(opcode[1]),
        .O(supervisor_i_2_n_0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    supervisor_reg
       (.C(CLK),
        .CE(1'b1),
        .D(supervisor_i_1_n_0),
        .Q(out),
        .R(1'b0));
endmodule

module debouncer
   (fast,
    fast_switch_IBUF,
    Clock_IBUF_BUFG);
  output fast;
  input fast_switch_IBUF;
  input Clock_IBUF_BUFG;

  wire Clock_IBUF_BUFG;
  wire \count[0]_i_1__2_n_0 ;
  wire \count[0]_i_3__2_n_0 ;
  wire [16:0]count_reg;
  wire \count_reg[0]_i_2__2_n_0 ;
  wire \count_reg[0]_i_2__2_n_1 ;
  wire \count_reg[0]_i_2__2_n_2 ;
  wire \count_reg[0]_i_2__2_n_3 ;
  wire \count_reg[0]_i_2__2_n_4 ;
  wire \count_reg[0]_i_2__2_n_5 ;
  wire \count_reg[0]_i_2__2_n_6 ;
  wire \count_reg[0]_i_2__2_n_7 ;
  wire \count_reg[12]_i_1__2_n_0 ;
  wire \count_reg[12]_i_1__2_n_1 ;
  wire \count_reg[12]_i_1__2_n_2 ;
  wire \count_reg[12]_i_1__2_n_3 ;
  wire \count_reg[12]_i_1__2_n_4 ;
  wire \count_reg[12]_i_1__2_n_5 ;
  wire \count_reg[12]_i_1__2_n_6 ;
  wire \count_reg[12]_i_1__2_n_7 ;
  wire \count_reg[16]_i_1__2_n_7 ;
  wire \count_reg[4]_i_1__2_n_0 ;
  wire \count_reg[4]_i_1__2_n_1 ;
  wire \count_reg[4]_i_1__2_n_2 ;
  wire \count_reg[4]_i_1__2_n_3 ;
  wire \count_reg[4]_i_1__2_n_4 ;
  wire \count_reg[4]_i_1__2_n_5 ;
  wire \count_reg[4]_i_1__2_n_6 ;
  wire \count_reg[4]_i_1__2_n_7 ;
  wire \count_reg[8]_i_1__2_n_0 ;
  wire \count_reg[8]_i_1__2_n_1 ;
  wire \count_reg[8]_i_1__2_n_2 ;
  wire \count_reg[8]_i_1__2_n_3 ;
  wire \count_reg[8]_i_1__2_n_4 ;
  wire \count_reg[8]_i_1__2_n_5 ;
  wire \count_reg[8]_i_1__2_n_6 ;
  wire \count_reg[8]_i_1__2_n_7 ;
  wire fast;
  wire fast_switch_IBUF;
  wire state_i_1__2_n_0;
  wire state_i_2__2_n_0;
  wire state_i_3__2_n_0;
  wire state_i_4__2_n_0;
  wire state_i_5__2_n_0;
  wire sync_0_reg_n_0;
  wire sync_1_reg_n_0;
  wire [3:0]\NLW_count_reg[16]_i_1__2_CO_UNCONNECTED ;
  wire [3:1]\NLW_count_reg[16]_i_1__2_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \count[0]_i_1__2 
       (.I0(fast),
        .I1(sync_1_reg_n_0),
        .O(\count[0]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_3__2 
       (.I0(count_reg[0]),
        .O(\count[0]_i_3__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__2_n_7 ),
        .Q(count_reg[0]),
        .R(\count[0]_i_1__2_n_0 ));
  CARRY4 \count_reg[0]_i_2__2 
       (.CI(1'b0),
        .CO({\count_reg[0]_i_2__2_n_0 ,\count_reg[0]_i_2__2_n_1 ,\count_reg[0]_i_2__2_n_2 ,\count_reg[0]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\count_reg[0]_i_2__2_n_4 ,\count_reg[0]_i_2__2_n_5 ,\count_reg[0]_i_2__2_n_6 ,\count_reg[0]_i_2__2_n_7 }),
        .S({count_reg[3:1],\count[0]_i_3__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__2_n_5 ),
        .Q(count_reg[10]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__2_n_4 ),
        .Q(count_reg[11]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__2_n_7 ),
        .Q(count_reg[12]),
        .R(\count[0]_i_1__2_n_0 ));
  CARRY4 \count_reg[12]_i_1__2 
       (.CI(\count_reg[8]_i_1__2_n_0 ),
        .CO({\count_reg[12]_i_1__2_n_0 ,\count_reg[12]_i_1__2_n_1 ,\count_reg[12]_i_1__2_n_2 ,\count_reg[12]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[12]_i_1__2_n_4 ,\count_reg[12]_i_1__2_n_5 ,\count_reg[12]_i_1__2_n_6 ,\count_reg[12]_i_1__2_n_7 }),
        .S(count_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[13] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__2_n_6 ),
        .Q(count_reg[13]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[14] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__2_n_5 ),
        .Q(count_reg[14]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[15] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__2_n_4 ),
        .Q(count_reg[15]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[16] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[16]_i_1__2_n_7 ),
        .Q(count_reg[16]),
        .R(\count[0]_i_1__2_n_0 ));
  CARRY4 \count_reg[16]_i_1__2 
       (.CI(\count_reg[12]_i_1__2_n_0 ),
        .CO(\NLW_count_reg[16]_i_1__2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_count_reg[16]_i_1__2_O_UNCONNECTED [3:1],\count_reg[16]_i_1__2_n_7 }),
        .S({1'b0,1'b0,1'b0,count_reg[16]}));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__2_n_6 ),
        .Q(count_reg[1]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__2_n_5 ),
        .Q(count_reg[2]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__2_n_4 ),
        .Q(count_reg[3]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__2_n_7 ),
        .Q(count_reg[4]),
        .R(\count[0]_i_1__2_n_0 ));
  CARRY4 \count_reg[4]_i_1__2 
       (.CI(\count_reg[0]_i_2__2_n_0 ),
        .CO({\count_reg[4]_i_1__2_n_0 ,\count_reg[4]_i_1__2_n_1 ,\count_reg[4]_i_1__2_n_2 ,\count_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[4]_i_1__2_n_4 ,\count_reg[4]_i_1__2_n_5 ,\count_reg[4]_i_1__2_n_6 ,\count_reg[4]_i_1__2_n_7 }),
        .S(count_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__2_n_6 ),
        .Q(count_reg[5]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__2_n_5 ),
        .Q(count_reg[6]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__2_n_4 ),
        .Q(count_reg[7]),
        .R(\count[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__2_n_7 ),
        .Q(count_reg[8]),
        .R(\count[0]_i_1__2_n_0 ));
  CARRY4 \count_reg[8]_i_1__2 
       (.CI(\count_reg[4]_i_1__2_n_0 ),
        .CO({\count_reg[8]_i_1__2_n_0 ,\count_reg[8]_i_1__2_n_1 ,\count_reg[8]_i_1__2_n_2 ,\count_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[8]_i_1__2_n_4 ,\count_reg[8]_i_1__2_n_5 ,\count_reg[8]_i_1__2_n_6 ,\count_reg[8]_i_1__2_n_7 }),
        .S(count_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__2_n_6 ),
        .Q(count_reg[9]),
        .R(\count[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    state_i_1__2
       (.I0(state_i_2__2_n_0),
        .I1(state_i_3__2_n_0),
        .I2(state_i_4__2_n_0),
        .I3(fast),
        .O(state_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_2__2
       (.I0(count_reg[3]),
        .I1(count_reg[4]),
        .I2(state_i_5__2_n_0),
        .I3(count_reg[0]),
        .I4(count_reg[1]),
        .I5(count_reg[2]),
        .O(state_i_2__2_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_3__2
       (.I0(count_reg[13]),
        .I1(count_reg[14]),
        .I2(count_reg[11]),
        .I3(count_reg[12]),
        .I4(count_reg[16]),
        .I5(count_reg[15]),
        .O(state_i_3__2_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_4__2
       (.I0(count_reg[7]),
        .I1(count_reg[8]),
        .I2(count_reg[5]),
        .I3(count_reg[6]),
        .I4(count_reg[10]),
        .I5(count_reg[9]),
        .O(state_i_4__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    state_i_5__2
       (.I0(sync_1_reg_n_0),
        .I1(fast),
        .O(state_i_5__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    state_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(state_i_1__2_n_0),
        .Q(fast),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_0_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(fast_switch_IBUF),
        .Q(sync_0_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_1_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(sync_0_reg_n_0),
        .Q(sync_1_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "debouncer" *) 
module debouncer_0
   (reset,
    reset_button_IBUF,
    Clock_IBUF_BUFG);
  output reset;
  input reset_button_IBUF;
  input Clock_IBUF_BUFG;

  wire Clock_IBUF_BUFG;
  wire \count[0]_i_1__0_n_0 ;
  wire \count[0]_i_3__0_n_0 ;
  wire [16:0]count_reg;
  wire \count_reg[0]_i_2__0_n_0 ;
  wire \count_reg[0]_i_2__0_n_1 ;
  wire \count_reg[0]_i_2__0_n_2 ;
  wire \count_reg[0]_i_2__0_n_3 ;
  wire \count_reg[0]_i_2__0_n_4 ;
  wire \count_reg[0]_i_2__0_n_5 ;
  wire \count_reg[0]_i_2__0_n_6 ;
  wire \count_reg[0]_i_2__0_n_7 ;
  wire \count_reg[12]_i_1__0_n_0 ;
  wire \count_reg[12]_i_1__0_n_1 ;
  wire \count_reg[12]_i_1__0_n_2 ;
  wire \count_reg[12]_i_1__0_n_3 ;
  wire \count_reg[12]_i_1__0_n_4 ;
  wire \count_reg[12]_i_1__0_n_5 ;
  wire \count_reg[12]_i_1__0_n_6 ;
  wire \count_reg[12]_i_1__0_n_7 ;
  wire \count_reg[16]_i_1__0_n_7 ;
  wire \count_reg[4]_i_1__0_n_0 ;
  wire \count_reg[4]_i_1__0_n_1 ;
  wire \count_reg[4]_i_1__0_n_2 ;
  wire \count_reg[4]_i_1__0_n_3 ;
  wire \count_reg[4]_i_1__0_n_4 ;
  wire \count_reg[4]_i_1__0_n_5 ;
  wire \count_reg[4]_i_1__0_n_6 ;
  wire \count_reg[4]_i_1__0_n_7 ;
  wire \count_reg[8]_i_1__0_n_0 ;
  wire \count_reg[8]_i_1__0_n_1 ;
  wire \count_reg[8]_i_1__0_n_2 ;
  wire \count_reg[8]_i_1__0_n_3 ;
  wire \count_reg[8]_i_1__0_n_4 ;
  wire \count_reg[8]_i_1__0_n_5 ;
  wire \count_reg[8]_i_1__0_n_6 ;
  wire \count_reg[8]_i_1__0_n_7 ;
  wire reset;
  wire reset_button_IBUF;
  wire state_i_1__0_n_0;
  wire state_i_2__0_n_0;
  wire state_i_3__0_n_0;
  wire state_i_4__0_n_0;
  wire state_i_5__0_n_0;
  wire sync_0_reg_n_0;
  wire sync_1_reg_n_0;
  wire [3:0]\NLW_count_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_count_reg[16]_i_1__0_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \count[0]_i_1__0 
       (.I0(reset),
        .I1(sync_1_reg_n_0),
        .O(\count[0]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_3__0 
       (.I0(count_reg[0]),
        .O(\count[0]_i_3__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__0_n_7 ),
        .Q(count_reg[0]),
        .R(\count[0]_i_1__0_n_0 ));
  CARRY4 \count_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\count_reg[0]_i_2__0_n_0 ,\count_reg[0]_i_2__0_n_1 ,\count_reg[0]_i_2__0_n_2 ,\count_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\count_reg[0]_i_2__0_n_4 ,\count_reg[0]_i_2__0_n_5 ,\count_reg[0]_i_2__0_n_6 ,\count_reg[0]_i_2__0_n_7 }),
        .S({count_reg[3:1],\count[0]_i_3__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__0_n_5 ),
        .Q(count_reg[10]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__0_n_4 ),
        .Q(count_reg[11]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__0_n_7 ),
        .Q(count_reg[12]),
        .R(\count[0]_i_1__0_n_0 ));
  CARRY4 \count_reg[12]_i_1__0 
       (.CI(\count_reg[8]_i_1__0_n_0 ),
        .CO({\count_reg[12]_i_1__0_n_0 ,\count_reg[12]_i_1__0_n_1 ,\count_reg[12]_i_1__0_n_2 ,\count_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[12]_i_1__0_n_4 ,\count_reg[12]_i_1__0_n_5 ,\count_reg[12]_i_1__0_n_6 ,\count_reg[12]_i_1__0_n_7 }),
        .S(count_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[13] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__0_n_6 ),
        .Q(count_reg[13]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[14] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__0_n_5 ),
        .Q(count_reg[14]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[15] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__0_n_4 ),
        .Q(count_reg[15]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[16] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[16]_i_1__0_n_7 ),
        .Q(count_reg[16]),
        .R(\count[0]_i_1__0_n_0 ));
  CARRY4 \count_reg[16]_i_1__0 
       (.CI(\count_reg[12]_i_1__0_n_0 ),
        .CO(\NLW_count_reg[16]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_count_reg[16]_i_1__0_O_UNCONNECTED [3:1],\count_reg[16]_i_1__0_n_7 }),
        .S({1'b0,1'b0,1'b0,count_reg[16]}));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__0_n_6 ),
        .Q(count_reg[1]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__0_n_5 ),
        .Q(count_reg[2]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__0_n_4 ),
        .Q(count_reg[3]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__0_n_7 ),
        .Q(count_reg[4]),
        .R(\count[0]_i_1__0_n_0 ));
  CARRY4 \count_reg[4]_i_1__0 
       (.CI(\count_reg[0]_i_2__0_n_0 ),
        .CO({\count_reg[4]_i_1__0_n_0 ,\count_reg[4]_i_1__0_n_1 ,\count_reg[4]_i_1__0_n_2 ,\count_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[4]_i_1__0_n_4 ,\count_reg[4]_i_1__0_n_5 ,\count_reg[4]_i_1__0_n_6 ,\count_reg[4]_i_1__0_n_7 }),
        .S(count_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__0_n_6 ),
        .Q(count_reg[5]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__0_n_5 ),
        .Q(count_reg[6]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__0_n_4 ),
        .Q(count_reg[7]),
        .R(\count[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__0_n_7 ),
        .Q(count_reg[8]),
        .R(\count[0]_i_1__0_n_0 ));
  CARRY4 \count_reg[8]_i_1__0 
       (.CI(\count_reg[4]_i_1__0_n_0 ),
        .CO({\count_reg[8]_i_1__0_n_0 ,\count_reg[8]_i_1__0_n_1 ,\count_reg[8]_i_1__0_n_2 ,\count_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[8]_i_1__0_n_4 ,\count_reg[8]_i_1__0_n_5 ,\count_reg[8]_i_1__0_n_6 ,\count_reg[8]_i_1__0_n_7 }),
        .S(count_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__0_n_6 ),
        .Q(count_reg[9]),
        .R(\count[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    state_i_1__0
       (.I0(state_i_2__0_n_0),
        .I1(state_i_3__0_n_0),
        .I2(state_i_4__0_n_0),
        .I3(reset),
        .O(state_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_2__0
       (.I0(count_reg[3]),
        .I1(count_reg[4]),
        .I2(state_i_5__0_n_0),
        .I3(count_reg[0]),
        .I4(count_reg[1]),
        .I5(count_reg[2]),
        .O(state_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_3__0
       (.I0(count_reg[13]),
        .I1(count_reg[14]),
        .I2(count_reg[11]),
        .I3(count_reg[12]),
        .I4(count_reg[16]),
        .I5(count_reg[15]),
        .O(state_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_4__0
       (.I0(count_reg[7]),
        .I1(count_reg[8]),
        .I2(count_reg[5]),
        .I3(count_reg[6]),
        .I4(count_reg[10]),
        .I5(count_reg[9]),
        .O(state_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    state_i_5__0
       (.I0(sync_1_reg_n_0),
        .I1(reset),
        .O(state_i_5__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    state_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(state_i_1__0_n_0),
        .Q(reset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_0_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(reset_button_IBUF),
        .Q(sync_0_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_1_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(sync_0_reg_n_0),
        .Q(sync_1_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "debouncer" *) 
module debouncer_1
   (run_led_OBUF,
    \count_reg[27] ,
    run_switch_IBUF,
    Clock_IBUF_BUFG,
    step);
  output run_led_OBUF;
  output \count_reg[27] ;
  input run_switch_IBUF;
  input Clock_IBUF_BUFG;
  input step;

  wire Clock_IBUF_BUFG;
  wire \count[0]_i_1__1_n_0 ;
  wire \count[0]_i_3__1_n_0 ;
  wire [16:0]count_reg;
  wire \count_reg[0]_i_2__1_n_0 ;
  wire \count_reg[0]_i_2__1_n_1 ;
  wire \count_reg[0]_i_2__1_n_2 ;
  wire \count_reg[0]_i_2__1_n_3 ;
  wire \count_reg[0]_i_2__1_n_4 ;
  wire \count_reg[0]_i_2__1_n_5 ;
  wire \count_reg[0]_i_2__1_n_6 ;
  wire \count_reg[0]_i_2__1_n_7 ;
  wire \count_reg[12]_i_1__1_n_0 ;
  wire \count_reg[12]_i_1__1_n_1 ;
  wire \count_reg[12]_i_1__1_n_2 ;
  wire \count_reg[12]_i_1__1_n_3 ;
  wire \count_reg[12]_i_1__1_n_4 ;
  wire \count_reg[12]_i_1__1_n_5 ;
  wire \count_reg[12]_i_1__1_n_6 ;
  wire \count_reg[12]_i_1__1_n_7 ;
  wire \count_reg[16]_i_1__1_n_7 ;
  wire \count_reg[27] ;
  wire \count_reg[4]_i_1__1_n_0 ;
  wire \count_reg[4]_i_1__1_n_1 ;
  wire \count_reg[4]_i_1__1_n_2 ;
  wire \count_reg[4]_i_1__1_n_3 ;
  wire \count_reg[4]_i_1__1_n_4 ;
  wire \count_reg[4]_i_1__1_n_5 ;
  wire \count_reg[4]_i_1__1_n_6 ;
  wire \count_reg[4]_i_1__1_n_7 ;
  wire \count_reg[8]_i_1__1_n_0 ;
  wire \count_reg[8]_i_1__1_n_1 ;
  wire \count_reg[8]_i_1__1_n_2 ;
  wire \count_reg[8]_i_1__1_n_3 ;
  wire \count_reg[8]_i_1__1_n_4 ;
  wire \count_reg[8]_i_1__1_n_5 ;
  wire \count_reg[8]_i_1__1_n_6 ;
  wire \count_reg[8]_i_1__1_n_7 ;
  wire run_led_OBUF;
  wire run_switch_IBUF;
  wire state_i_1__1_n_0;
  wire state_i_2__1_n_0;
  wire state_i_3__1_n_0;
  wire state_i_4__1_n_0;
  wire state_i_5__1_n_0;
  wire step;
  wire sync_0_reg_n_0;
  wire sync_1_reg_n_0;
  wire [3:0]\NLW_count_reg[16]_i_1__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_count_reg[16]_i_1__1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \count[0]_i_1__1 
       (.I0(run_led_OBUF),
        .I1(sync_1_reg_n_0),
        .O(\count[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \count[0]_i_1__3 
       (.I0(run_led_OBUF),
        .I1(step),
        .O(\count_reg[27] ));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_3__1 
       (.I0(count_reg[0]),
        .O(\count[0]_i_3__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__1_n_7 ),
        .Q(count_reg[0]),
        .R(\count[0]_i_1__1_n_0 ));
  CARRY4 \count_reg[0]_i_2__1 
       (.CI(1'b0),
        .CO({\count_reg[0]_i_2__1_n_0 ,\count_reg[0]_i_2__1_n_1 ,\count_reg[0]_i_2__1_n_2 ,\count_reg[0]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\count_reg[0]_i_2__1_n_4 ,\count_reg[0]_i_2__1_n_5 ,\count_reg[0]_i_2__1_n_6 ,\count_reg[0]_i_2__1_n_7 }),
        .S({count_reg[3:1],\count[0]_i_3__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__1_n_5 ),
        .Q(count_reg[10]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__1_n_4 ),
        .Q(count_reg[11]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__1_n_7 ),
        .Q(count_reg[12]),
        .R(\count[0]_i_1__1_n_0 ));
  CARRY4 \count_reg[12]_i_1__1 
       (.CI(\count_reg[8]_i_1__1_n_0 ),
        .CO({\count_reg[12]_i_1__1_n_0 ,\count_reg[12]_i_1__1_n_1 ,\count_reg[12]_i_1__1_n_2 ,\count_reg[12]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[12]_i_1__1_n_4 ,\count_reg[12]_i_1__1_n_5 ,\count_reg[12]_i_1__1_n_6 ,\count_reg[12]_i_1__1_n_7 }),
        .S(count_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[13] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__1_n_6 ),
        .Q(count_reg[13]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[14] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__1_n_5 ),
        .Q(count_reg[14]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[15] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1__1_n_4 ),
        .Q(count_reg[15]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[16] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[16]_i_1__1_n_7 ),
        .Q(count_reg[16]),
        .R(\count[0]_i_1__1_n_0 ));
  CARRY4 \count_reg[16]_i_1__1 
       (.CI(\count_reg[12]_i_1__1_n_0 ),
        .CO(\NLW_count_reg[16]_i_1__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_count_reg[16]_i_1__1_O_UNCONNECTED [3:1],\count_reg[16]_i_1__1_n_7 }),
        .S({1'b0,1'b0,1'b0,count_reg[16]}));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__1_n_6 ),
        .Q(count_reg[1]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__1_n_5 ),
        .Q(count_reg[2]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2__1_n_4 ),
        .Q(count_reg[3]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__1_n_7 ),
        .Q(count_reg[4]),
        .R(\count[0]_i_1__1_n_0 ));
  CARRY4 \count_reg[4]_i_1__1 
       (.CI(\count_reg[0]_i_2__1_n_0 ),
        .CO({\count_reg[4]_i_1__1_n_0 ,\count_reg[4]_i_1__1_n_1 ,\count_reg[4]_i_1__1_n_2 ,\count_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[4]_i_1__1_n_4 ,\count_reg[4]_i_1__1_n_5 ,\count_reg[4]_i_1__1_n_6 ,\count_reg[4]_i_1__1_n_7 }),
        .S(count_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__1_n_6 ),
        .Q(count_reg[5]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__1_n_5 ),
        .Q(count_reg[6]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1__1_n_4 ),
        .Q(count_reg[7]),
        .R(\count[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__1_n_7 ),
        .Q(count_reg[8]),
        .R(\count[0]_i_1__1_n_0 ));
  CARRY4 \count_reg[8]_i_1__1 
       (.CI(\count_reg[4]_i_1__1_n_0 ),
        .CO({\count_reg[8]_i_1__1_n_0 ,\count_reg[8]_i_1__1_n_1 ,\count_reg[8]_i_1__1_n_2 ,\count_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[8]_i_1__1_n_4 ,\count_reg[8]_i_1__1_n_5 ,\count_reg[8]_i_1__1_n_6 ,\count_reg[8]_i_1__1_n_7 }),
        .S(count_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1__1_n_6 ),
        .Q(count_reg[9]),
        .R(\count[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    state_i_1__1
       (.I0(state_i_2__1_n_0),
        .I1(state_i_3__1_n_0),
        .I2(state_i_4__1_n_0),
        .I3(run_led_OBUF),
        .O(state_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_2__1
       (.I0(count_reg[3]),
        .I1(count_reg[4]),
        .I2(state_i_5__1_n_0),
        .I3(count_reg[0]),
        .I4(count_reg[1]),
        .I5(count_reg[2]),
        .O(state_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_3__1
       (.I0(count_reg[13]),
        .I1(count_reg[14]),
        .I2(count_reg[11]),
        .I3(count_reg[12]),
        .I4(count_reg[16]),
        .I5(count_reg[15]),
        .O(state_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_4__1
       (.I0(count_reg[7]),
        .I1(count_reg[8]),
        .I2(count_reg[5]),
        .I3(count_reg[6]),
        .I4(count_reg[10]),
        .I5(count_reg[9]),
        .O(state_i_4__1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    state_i_5__1
       (.I0(sync_1_reg_n_0),
        .I1(run_led_OBUF),
        .O(state_i_5__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    state_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(state_i_1__1_n_0),
        .Q(run_led_OBUF),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_0_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(run_switch_IBUF),
        .Q(sync_0_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_1_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(sync_0_reg_n_0),
        .Q(sync_1_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "debouncer" *) 
module debouncer_2
   (step,
    step_button_IBUF,
    Clock_IBUF_BUFG);
  output step;
  input step_button_IBUF;
  input Clock_IBUF_BUFG;

  wire Clock_IBUF_BUFG;
  wire \count[0]_i_1_n_0 ;
  wire \count[0]_i_3_n_0 ;
  wire [16:0]count_reg;
  wire \count_reg[0]_i_2_n_0 ;
  wire \count_reg[0]_i_2_n_1 ;
  wire \count_reg[0]_i_2_n_2 ;
  wire \count_reg[0]_i_2_n_3 ;
  wire \count_reg[0]_i_2_n_4 ;
  wire \count_reg[0]_i_2_n_5 ;
  wire \count_reg[0]_i_2_n_6 ;
  wire \count_reg[0]_i_2_n_7 ;
  wire \count_reg[12]_i_1_n_0 ;
  wire \count_reg[12]_i_1_n_1 ;
  wire \count_reg[12]_i_1_n_2 ;
  wire \count_reg[12]_i_1_n_3 ;
  wire \count_reg[12]_i_1_n_4 ;
  wire \count_reg[12]_i_1_n_5 ;
  wire \count_reg[12]_i_1_n_6 ;
  wire \count_reg[12]_i_1_n_7 ;
  wire \count_reg[16]_i_1_n_7 ;
  wire \count_reg[4]_i_1_n_0 ;
  wire \count_reg[4]_i_1_n_1 ;
  wire \count_reg[4]_i_1_n_2 ;
  wire \count_reg[4]_i_1_n_3 ;
  wire \count_reg[4]_i_1_n_4 ;
  wire \count_reg[4]_i_1_n_5 ;
  wire \count_reg[4]_i_1_n_6 ;
  wire \count_reg[4]_i_1_n_7 ;
  wire \count_reg[8]_i_1_n_0 ;
  wire \count_reg[8]_i_1_n_1 ;
  wire \count_reg[8]_i_1_n_2 ;
  wire \count_reg[8]_i_1_n_3 ;
  wire \count_reg[8]_i_1_n_4 ;
  wire \count_reg[8]_i_1_n_5 ;
  wire \count_reg[8]_i_1_n_6 ;
  wire \count_reg[8]_i_1_n_7 ;
  wire state_i_1_n_0;
  wire state_i_2_n_0;
  wire state_i_3_n_0;
  wire state_i_4_n_0;
  wire state_i_5_n_0;
  wire step;
  wire step_button_IBUF;
  wire sync_0;
  wire sync_1;
  wire [3:0]\NLW_count_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_count_reg[16]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \count[0]_i_1 
       (.I0(step),
        .I1(sync_1),
        .O(\count[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_3 
       (.I0(count_reg[0]),
        .O(\count[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2_n_7 ),
        .Q(count_reg[0]),
        .R(\count[0]_i_1_n_0 ));
  CARRY4 \count_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\count_reg[0]_i_2_n_0 ,\count_reg[0]_i_2_n_1 ,\count_reg[0]_i_2_n_2 ,\count_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\count_reg[0]_i_2_n_4 ,\count_reg[0]_i_2_n_5 ,\count_reg[0]_i_2_n_6 ,\count_reg[0]_i_2_n_7 }),
        .S({count_reg[3:1],\count[0]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[10] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1_n_5 ),
        .Q(count_reg[10]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[11] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1_n_4 ),
        .Q(count_reg[11]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[12] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1_n_7 ),
        .Q(count_reg[12]),
        .R(\count[0]_i_1_n_0 ));
  CARRY4 \count_reg[12]_i_1 
       (.CI(\count_reg[8]_i_1_n_0 ),
        .CO({\count_reg[12]_i_1_n_0 ,\count_reg[12]_i_1_n_1 ,\count_reg[12]_i_1_n_2 ,\count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[12]_i_1_n_4 ,\count_reg[12]_i_1_n_5 ,\count_reg[12]_i_1_n_6 ,\count_reg[12]_i_1_n_7 }),
        .S(count_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[13] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1_n_6 ),
        .Q(count_reg[13]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[14] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1_n_5 ),
        .Q(count_reg[14]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[15] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[12]_i_1_n_4 ),
        .Q(count_reg[15]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[16] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[16]_i_1_n_7 ),
        .Q(count_reg[16]),
        .R(\count[0]_i_1_n_0 ));
  CARRY4 \count_reg[16]_i_1 
       (.CI(\count_reg[12]_i_1_n_0 ),
        .CO(\NLW_count_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_count_reg[16]_i_1_O_UNCONNECTED [3:1],\count_reg[16]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,count_reg[16]}));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2_n_6 ),
        .Q(count_reg[1]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2_n_5 ),
        .Q(count_reg[2]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[0]_i_2_n_4 ),
        .Q(count_reg[3]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1_n_7 ),
        .Q(count_reg[4]),
        .R(\count[0]_i_1_n_0 ));
  CARRY4 \count_reg[4]_i_1 
       (.CI(\count_reg[0]_i_2_n_0 ),
        .CO({\count_reg[4]_i_1_n_0 ,\count_reg[4]_i_1_n_1 ,\count_reg[4]_i_1_n_2 ,\count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[4]_i_1_n_4 ,\count_reg[4]_i_1_n_5 ,\count_reg[4]_i_1_n_6 ,\count_reg[4]_i_1_n_7 }),
        .S(count_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1_n_6 ),
        .Q(count_reg[5]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1_n_5 ),
        .Q(count_reg[6]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[4]_i_1_n_4 ),
        .Q(count_reg[7]),
        .R(\count[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[8] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1_n_7 ),
        .Q(count_reg[8]),
        .R(\count[0]_i_1_n_0 ));
  CARRY4 \count_reg[8]_i_1 
       (.CI(\count_reg[4]_i_1_n_0 ),
        .CO({\count_reg[8]_i_1_n_0 ,\count_reg[8]_i_1_n_1 ,\count_reg[8]_i_1_n_2 ,\count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\count_reg[8]_i_1_n_4 ,\count_reg[8]_i_1_n_5 ,\count_reg[8]_i_1_n_6 ,\count_reg[8]_i_1_n_7 }),
        .S(count_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[9] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\count_reg[8]_i_1_n_6 ),
        .Q(count_reg[9]),
        .R(\count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    state_i_1
       (.I0(state_i_2_n_0),
        .I1(state_i_3_n_0),
        .I2(state_i_4_n_0),
        .I3(step),
        .O(state_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_2
       (.I0(count_reg[3]),
        .I1(count_reg[4]),
        .I2(state_i_5_n_0),
        .I3(count_reg[0]),
        .I4(count_reg[1]),
        .I5(count_reg[2]),
        .O(state_i_2_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_3
       (.I0(count_reg[13]),
        .I1(count_reg[14]),
        .I2(count_reg[11]),
        .I3(count_reg[12]),
        .I4(count_reg[16]),
        .I5(count_reg[15]),
        .O(state_i_3_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    state_i_4
       (.I0(count_reg[7]),
        .I1(count_reg[8]),
        .I2(count_reg[5]),
        .I3(count_reg[6]),
        .I4(count_reg[10]),
        .I5(count_reg[9]),
        .O(state_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    state_i_5
       (.I0(sync_1),
        .I1(step),
        .O(state_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    state_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(state_i_1_n_0),
        .Q(step),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_0_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(step_button_IBUF),
        .Q(sync_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    sync_1_reg
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(sync_0),
        .Q(sync_1),
        .R(1'b0));
endmodule

module decoder_7_seg
   (\SEG[7] ,
    Q,
    Clock_IBUF_BUFG);
  output [6:0]\SEG[7] ;
  input [3:0]Q;
  input Clock_IBUF_BUFG;

  wire Clock_IBUF_BUFG;
  wire [3:0]Q;
  wire [7:2]SEG;
  wire \SEG[1]_i_1_n_0 ;
  wire [6:0]\SEG[7] ;

  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h0091)) 
    \SEG[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\SEG[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h5398)) 
    \SEG[2]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(SEG[2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h5710)) 
    \SEG[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(SEG[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'hC014)) 
    \SEG[4]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(SEG[4]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'hA210)) 
    \SEG[5]_i_1 
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(SEG[5]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'hA448)) 
    \SEG[6]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(SEG[6]));
  LUT4 #(
    .INIT(16'h209C)) 
    \SEG[7]_i_1 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(SEG[7]));
  FDRE #(
    .INIT(1'b0)) 
    \SEG_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\SEG[1]_i_1_n_0 ),
        .Q(\SEG[7] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SEG_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(SEG[2]),
        .Q(\SEG[7] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SEG_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(SEG[3]),
        .Q(\SEG[7] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SEG_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(SEG[4]),
        .Q(\SEG[7] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SEG_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(SEG[5]),
        .Q(\SEG[7] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SEG_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(SEG[6]),
        .Q(\SEG[7] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SEG_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(SEG[7]),
        .Q(\SEG[7] [6]),
        .R(1'b0));
endmodule

module display_7_seg
   (DIGIT_OBUF,
    Q,
    out,
    \opcode_reg[3] ,
    \data_reg[3] ,
    \PC_reg[5] ,
    \address_bus_reg[5] ,
    Clock_IBUF_BUFG);
  output [7:0]DIGIT_OBUF;
  output [6:0]Q;
  input [7:0]out;
  input [3:0]\opcode_reg[3] ;
  input [3:0]\data_reg[3] ;
  input [5:0]\PC_reg[5] ;
  input [5:0]\address_bus_reg[5] ;
  input Clock_IBUF_BUFG;

  wire Clock_IBUF_BUFG;
  wire \DIGIT[0]_i_1_n_0 ;
  wire \DIGIT[1]_i_1_n_0 ;
  wire \DIGIT[2]_i_1_n_0 ;
  wire \DIGIT[3]_i_1_n_0 ;
  wire \DIGIT[3]_i_2_n_0 ;
  wire \DIGIT[4]_i_1_n_0 ;
  wire \DIGIT[5]_i_1_n_0 ;
  wire \DIGIT[5]_i_2_n_0 ;
  wire \DIGIT[6]_i_1_n_0 ;
  wire \DIGIT[6]_i_2_n_0 ;
  wire \DIGIT[7]_i_1_n_0 ;
  wire [7:0]DIGIT_OBUF;
  wire [5:0]\PC_reg[5] ;
  wire [6:0]Q;
  wire [5:0]\address_bus_reg[5] ;
  wire [23:1]data0;
  wire [3:0]\data_reg[3] ;
  wire [3:0]digit_data;
  wire \digit_data[0]_i_2_n_0 ;
  wire \digit_data[0]_i_3_n_0 ;
  wire \digit_data[1]_i_2_n_0 ;
  wire \digit_data[1]_i_3_n_0 ;
  wire \digit_data[2]_i_2_n_0 ;
  wire \digit_data[3]_i_2_n_0 ;
  wire [3:0]digit_data_0;
  wire digit_posn;
  wire \digit_posn[0]_i_1_n_0 ;
  wire \digit_posn[1]_i_1_n_0 ;
  wire \digit_posn[2]_i_1_n_0 ;
  wire \digit_posn_reg_n_0_[0] ;
  wire \digit_posn_reg_n_0_[1] ;
  wire \digit_posn_reg_n_0_[2] ;
  wire [3:0]\opcode_reg[3] ;
  wire [7:0]out;
  wire [23:0]prescaler;
  wire prescaler0_carry__0_n_0;
  wire prescaler0_carry__0_n_1;
  wire prescaler0_carry__0_n_2;
  wire prescaler0_carry__0_n_3;
  wire prescaler0_carry__1_n_0;
  wire prescaler0_carry__1_n_1;
  wire prescaler0_carry__1_n_2;
  wire prescaler0_carry__1_n_3;
  wire prescaler0_carry__2_n_0;
  wire prescaler0_carry__2_n_1;
  wire prescaler0_carry__2_n_2;
  wire prescaler0_carry__2_n_3;
  wire prescaler0_carry__3_n_0;
  wire prescaler0_carry__3_n_1;
  wire prescaler0_carry__3_n_2;
  wire prescaler0_carry__3_n_3;
  wire prescaler0_carry__4_n_2;
  wire prescaler0_carry__4_n_3;
  wire prescaler0_carry_n_0;
  wire prescaler0_carry_n_1;
  wire prescaler0_carry_n_2;
  wire prescaler0_carry_n_3;
  wire \prescaler[0]_i_2_n_0 ;
  wire \prescaler[0]_i_3_n_0 ;
  wire \prescaler[0]_i_4_n_0 ;
  wire \prescaler[0]_i_5_n_0 ;
  wire \prescaler[0]_i_6_n_0 ;
  wire \prescaler[0]_i_7_n_0 ;
  wire \prescaler[0]_i_8_n_0 ;
  wire [0:0]prescaler_1;
  wire [3:2]NLW_prescaler0_carry__4_CO_UNCONNECTED;
  wire [3:3]NLW_prescaler0_carry__4_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'hE)) 
    \DIGIT[0]_i_1 
       (.I0(\digit_posn_reg_n_0_[0] ),
        .I1(\digit_posn_reg_n_0_[2] ),
        .O(\DIGIT[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \DIGIT[1]_i_1 
       (.I0(\digit_posn_reg_n_0_[2] ),
        .I1(\digit_posn_reg_n_0_[0] ),
        .O(\DIGIT[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \DIGIT[2]_i_1 
       (.I0(\digit_posn_reg_n_0_[0] ),
        .I1(\digit_posn_reg_n_0_[1] ),
        .O(\DIGIT[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \DIGIT[3]_i_1 
       (.I0(\digit_posn_reg_n_0_[2] ),
        .I1(prescaler[0]),
        .I2(\prescaler[0]_i_2_n_0 ),
        .O(\DIGIT[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \DIGIT[3]_i_2 
       (.I0(\digit_posn_reg_n_0_[0] ),
        .I1(\digit_posn_reg_n_0_[1] ),
        .O(\DIGIT[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \DIGIT[4]_i_1 
       (.I0(\digit_posn_reg_n_0_[0] ),
        .I1(\digit_posn_reg_n_0_[2] ),
        .O(\DIGIT[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \DIGIT[5]_i_1 
       (.I0(\digit_posn_reg_n_0_[1] ),
        .I1(prescaler[0]),
        .I2(\prescaler[0]_i_2_n_0 ),
        .O(\DIGIT[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \DIGIT[5]_i_2 
       (.I0(\digit_posn_reg_n_0_[0] ),
        .I1(\digit_posn_reg_n_0_[2] ),
        .O(\DIGIT[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \DIGIT[6]_i_1 
       (.I0(\digit_posn_reg_n_0_[0] ),
        .I1(prescaler[0]),
        .I2(\prescaler[0]_i_2_n_0 ),
        .O(\DIGIT[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \DIGIT[6]_i_2 
       (.I0(\digit_posn_reg_n_0_[2] ),
        .I1(\digit_posn_reg_n_0_[1] ),
        .O(\DIGIT[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \DIGIT[7]_i_1 
       (.I0(\digit_posn_reg_n_0_[1] ),
        .I1(prescaler[0]),
        .I2(\prescaler[0]_i_2_n_0 ),
        .O(\DIGIT[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[0]_i_1_n_0 ),
        .Q(DIGIT_OBUF[0]),
        .S(\DIGIT[5]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[1]_i_1_n_0 ),
        .Q(DIGIT_OBUF[1]),
        .S(\DIGIT[5]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[2]_i_1_n_0 ),
        .Q(DIGIT_OBUF[2]),
        .S(\DIGIT[3]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[3]_i_2_n_0 ),
        .Q(DIGIT_OBUF[3]),
        .S(\DIGIT[3]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[4]_i_1_n_0 ),
        .Q(DIGIT_OBUF[4]),
        .S(\DIGIT[5]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[5]_i_2_n_0 ),
        .Q(DIGIT_OBUF[5]),
        .S(\DIGIT[5]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[6]_i_2_n_0 ),
        .Q(DIGIT_OBUF[6]),
        .S(\DIGIT[6]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \DIGIT_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\DIGIT[5]_i_2_n_0 ),
        .Q(DIGIT_OBUF[7]),
        .S(\DIGIT[7]_i_1_n_0 ));
  decoder_7_seg decoder
       (.Clock_IBUF_BUFG(Clock_IBUF_BUFG),
        .Q(digit_data),
        .\SEG[7] (Q));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \digit_data[0]_i_2 
       (.I0(out[4]),
        .I1(out[0]),
        .I2(\digit_posn_reg_n_0_[1] ),
        .I3(\opcode_reg[3] [0]),
        .I4(\digit_posn_reg_n_0_[0] ),
        .I5(\data_reg[3] [0]),
        .O(\digit_data[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \digit_data[0]_i_3 
       (.I0(\PC_reg[5] [4]),
        .I1(\PC_reg[5] [0]),
        .I2(\digit_posn_reg_n_0_[1] ),
        .I3(\address_bus_reg[5] [4]),
        .I4(\digit_posn_reg_n_0_[0] ),
        .I5(\address_bus_reg[5] [0]),
        .O(\digit_data[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \digit_data[1]_i_2 
       (.I0(out[5]),
        .I1(out[1]),
        .I2(\digit_posn_reg_n_0_[1] ),
        .I3(\opcode_reg[3] [1]),
        .I4(\digit_posn_reg_n_0_[0] ),
        .I5(\data_reg[3] [1]),
        .O(\digit_data[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \digit_data[1]_i_3 
       (.I0(\PC_reg[5] [5]),
        .I1(\PC_reg[5] [1]),
        .I2(\digit_posn_reg_n_0_[1] ),
        .I3(\address_bus_reg[5] [5]),
        .I4(\digit_posn_reg_n_0_[0] ),
        .I5(\address_bus_reg[5] [1]),
        .O(\digit_data[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \digit_data[2]_i_1 
       (.I0(\PC_reg[5] [2]),
        .I1(\digit_posn_reg_n_0_[1] ),
        .I2(\address_bus_reg[5] [2]),
        .I3(\digit_posn_reg_n_0_[0] ),
        .I4(\digit_posn_reg_n_0_[2] ),
        .I5(\digit_data[2]_i_2_n_0 ),
        .O(digit_data_0[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \digit_data[2]_i_2 
       (.I0(out[6]),
        .I1(out[2]),
        .I2(\digit_posn_reg_n_0_[1] ),
        .I3(\opcode_reg[3] [2]),
        .I4(\digit_posn_reg_n_0_[0] ),
        .I5(\data_reg[3] [2]),
        .O(\digit_data[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \digit_data[3]_i_1 
       (.I0(\PC_reg[5] [3]),
        .I1(\digit_posn_reg_n_0_[1] ),
        .I2(\address_bus_reg[5] [3]),
        .I3(\digit_posn_reg_n_0_[0] ),
        .I4(\digit_posn_reg_n_0_[2] ),
        .I5(\digit_data[3]_i_2_n_0 ),
        .O(digit_data_0[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \digit_data[3]_i_2 
       (.I0(out[7]),
        .I1(out[3]),
        .I2(\digit_posn_reg_n_0_[1] ),
        .I3(\opcode_reg[3] [3]),
        .I4(\digit_posn_reg_n_0_[0] ),
        .I5(\data_reg[3] [3]),
        .O(\digit_data[3]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \digit_data_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(digit_data_0[0]),
        .Q(digit_data[0]),
        .R(1'b0));
  MUXF7 \digit_data_reg[0]_i_1 
       (.I0(\digit_data[0]_i_2_n_0 ),
        .I1(\digit_data[0]_i_3_n_0 ),
        .O(digit_data_0[0]),
        .S(\digit_posn_reg_n_0_[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \digit_data_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(digit_data_0[1]),
        .Q(digit_data[1]),
        .R(1'b0));
  MUXF7 \digit_data_reg[1]_i_1 
       (.I0(\digit_data[1]_i_2_n_0 ),
        .I1(\digit_data[1]_i_3_n_0 ),
        .O(digit_data_0[1]),
        .S(\digit_posn_reg_n_0_[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \digit_data_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(digit_data_0[2]),
        .Q(digit_data[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \digit_data_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(digit_data_0[3]),
        .Q(digit_data[3]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \digit_posn[0]_i_1 
       (.I0(\digit_posn_reg_n_0_[0] ),
        .O(\digit_posn[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \digit_posn[1]_i_1 
       (.I0(\digit_posn_reg_n_0_[1] ),
        .I1(\digit_posn_reg_n_0_[0] ),
        .O(\digit_posn[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \digit_posn[2]_i_1 
       (.I0(\digit_posn_reg_n_0_[1] ),
        .I1(\digit_posn_reg_n_0_[0] ),
        .I2(\digit_posn_reg_n_0_[2] ),
        .O(\digit_posn[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \digit_posn_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\digit_posn[0]_i_1_n_0 ),
        .Q(\digit_posn_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \digit_posn_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\digit_posn[1]_i_1_n_0 ),
        .Q(\digit_posn_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \digit_posn_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(digit_posn),
        .D(\digit_posn[2]_i_1_n_0 ),
        .Q(\digit_posn_reg_n_0_[2] ),
        .R(1'b0));
  CARRY4 prescaler0_carry
       (.CI(1'b0),
        .CO({prescaler0_carry_n_0,prescaler0_carry_n_1,prescaler0_carry_n_2,prescaler0_carry_n_3}),
        .CYINIT(prescaler[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S(prescaler[4:1]));
  CARRY4 prescaler0_carry__0
       (.CI(prescaler0_carry_n_0),
        .CO({prescaler0_carry__0_n_0,prescaler0_carry__0_n_1,prescaler0_carry__0_n_2,prescaler0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S(prescaler[8:5]));
  CARRY4 prescaler0_carry__1
       (.CI(prescaler0_carry__0_n_0),
        .CO({prescaler0_carry__1_n_0,prescaler0_carry__1_n_1,prescaler0_carry__1_n_2,prescaler0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[12:9]),
        .S(prescaler[12:9]));
  CARRY4 prescaler0_carry__2
       (.CI(prescaler0_carry__1_n_0),
        .CO({prescaler0_carry__2_n_0,prescaler0_carry__2_n_1,prescaler0_carry__2_n_2,prescaler0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[16:13]),
        .S(prescaler[16:13]));
  CARRY4 prescaler0_carry__3
       (.CI(prescaler0_carry__2_n_0),
        .CO({prescaler0_carry__3_n_0,prescaler0_carry__3_n_1,prescaler0_carry__3_n_2,prescaler0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[20:17]),
        .S(prescaler[20:17]));
  CARRY4 prescaler0_carry__4
       (.CI(prescaler0_carry__3_n_0),
        .CO({NLW_prescaler0_carry__4_CO_UNCONNECTED[3:2],prescaler0_carry__4_n_2,prescaler0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_prescaler0_carry__4_O_UNCONNECTED[3],data0[23:21]}),
        .S({1'b0,prescaler[23:21]}));
  LUT2 #(
    .INIT(4'h2)) 
    \prescaler[0]_i_1 
       (.I0(\prescaler[0]_i_2_n_0 ),
        .I1(prescaler[0]),
        .O(prescaler_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \prescaler[0]_i_2 
       (.I0(\prescaler[0]_i_3_n_0 ),
        .I1(\prescaler[0]_i_4_n_0 ),
        .I2(\prescaler[0]_i_5_n_0 ),
        .I3(\prescaler[0]_i_6_n_0 ),
        .I4(\prescaler[0]_i_7_n_0 ),
        .I5(\prescaler[0]_i_8_n_0 ),
        .O(\prescaler[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \prescaler[0]_i_3 
       (.I0(prescaler[19]),
        .I1(prescaler[18]),
        .I2(prescaler[21]),
        .I3(prescaler[20]),
        .O(\prescaler[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \prescaler[0]_i_4 
       (.I0(prescaler[23]),
        .I1(prescaler[22]),
        .I2(prescaler[1]),
        .O(\prescaler[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \prescaler[0]_i_5 
       (.I0(prescaler[11]),
        .I1(prescaler[10]),
        .I2(prescaler[13]),
        .I3(prescaler[12]),
        .O(\prescaler[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \prescaler[0]_i_6 
       (.I0(prescaler[15]),
        .I1(prescaler[14]),
        .I2(prescaler[17]),
        .I3(prescaler[16]),
        .O(\prescaler[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \prescaler[0]_i_7 
       (.I0(prescaler[6]),
        .I1(prescaler[7]),
        .I2(prescaler[9]),
        .I3(prescaler[8]),
        .O(\prescaler[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \prescaler[0]_i_8 
       (.I0(prescaler[3]),
        .I1(prescaler[2]),
        .I2(prescaler[4]),
        .I3(prescaler[5]),
        .O(\prescaler[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \prescaler[23]_i_1 
       (.I0(prescaler[0]),
        .I1(\prescaler[0]_i_2_n_0 ),
        .O(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[0] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(prescaler_1),
        .Q(prescaler[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[10] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[10]),
        .Q(prescaler[10]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[11] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[11]),
        .Q(prescaler[11]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[12] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[12]),
        .Q(prescaler[12]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[13] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[13]),
        .Q(prescaler[13]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[14] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[14]),
        .Q(prescaler[14]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[15] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[15]),
        .Q(prescaler[15]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[16] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[16]),
        .Q(prescaler[16]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[17] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[17]),
        .Q(prescaler[17]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[18] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[18]),
        .Q(prescaler[18]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[19] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[19]),
        .Q(prescaler[19]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[1] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[1]),
        .Q(prescaler[1]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[20] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[20]),
        .Q(prescaler[20]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[21] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[21]),
        .Q(prescaler[21]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[22] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[22]),
        .Q(prescaler[22]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[23] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[23]),
        .Q(prescaler[23]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[2] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[2]),
        .Q(prescaler[2]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[3] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[3]),
        .Q(prescaler[3]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[4] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[4]),
        .Q(prescaler[4]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[5] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[5]),
        .Q(prescaler[5]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[6] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[6]),
        .Q(prescaler[6]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[7] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[7]),
        .Q(prescaler[7]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[8] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[8]),
        .Q(prescaler[8]),
        .R(digit_posn));
  FDRE #(
    .INIT(1'b0)) 
    \prescaler_reg[9] 
       (.C(Clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data0[9]),
        .Q(prescaler[9]),
        .R(digit_posn));
endmodule

module rom
   (Q,
    D,
    CLK);
  output [6:0]Q;
  input [6:0]D;
  input CLK;

  wire CLK;
  wire [6:0]D;
  wire [6:0]Q;

  FDRE #(
    .INIT(1'b0)) 
    \data_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(1'b0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
